{"messages":[{"role":"system","content":"You are Bazaar's Remotion code generator. Respond with valid TSX only. Start with imports/const declarations and never add prose."},{"role":"user","content":"Growth graph portrait in portrait (1080×1920). Leaning into a modern and professional look. Make sure we show line chart, metric cards, and emphasis badge. Use line draw and number counter for motion. Target duration: 6 seconds (180 frames)."},{"role":"assistant","content":"const { AbsoluteFill, useCurrentFrame, useVideoConfig, interpolate, spring, Img } = window.Remotion;\n\n// Auto-generated defaults for undefined variables\nconst padding = 16;\nconst gap = 12;\n\nconst TemplateScene = () => {\n  const frame = useCurrentFrame();\n  const { fps } = useVideoConfig();\n\n  // Card entrance animation\n  const cardScale = spring({\n    frame, fps,\n    config: {\n      damping: 12,\n      stiffness: 100,\n      mass: 0.5,\n    },\n  });\n\n  const cardOpacity = interpolate(frame, [0, 20], [0, 1], {\n    extrapolateLeft: \"clamp\",\n    extrapolateRight: \"clamp\",\n  });\n\n  // Growth percentage animation\n  const growthProgress = interpolate(frame, [20, 80], [0, 1], {\n    extrapolateLeft: \"clamp\",\n    extrapolateRight: \"clamp\",\n  });\n\n  const currentGrowth = interpolate(growthProgress, [0, 1], [0, 24.15], {\n    extrapolateLeft: \"clamp\",\n    extrapolateRight: \"clamp\",\n  });\n\n  // Yellow line animation with slow in slow out easing - starts from first frame\n  const lineProgressRaw = interpolate(frame, [0, 120], [0, 1], {\n    extrapolateLeft: \"clamp\",\n    extrapolateRight: \"clamp\",\n  });\n\n  // Apply slow in slow out easing (ease-in-out cubic)\n  const lineProgress = lineProgressRaw < 0.5\n    ? 2 * lineProgressRaw * lineProgressRaw\n    : 1 - Math.pow(-2 * lineProgressRaw + 2, 2) / 2;\n\n  // Chart bars animation - visible from start\n  const barsOpacity = 1;\n\n  // Button animation - visible from start\n  const buttonOpacity = 1;\n  const buttonScale = 1;\n\n  // Chart data with custom height sequence - removed final drop, ends at steady level\n  const chartData = [\n    0.3, 0.32, 0.35, 0.38, 0.4, 0.38, 0.35, 0.32, 0.3, 0.32, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.58, 0.55, 0.5, 0.45,\n    0.42, 0.4, 0.38, 0.36, 0.34, 0.32, 0.3, 0.32, 0.35, 0.38, 0.42, 0.46, 0.5, 0.54, 0.58, 0.6, 0.6\n  ];\n\n  // Enhanced smooth interpolation with better curve flattening\n  const getSmoothedValue = (progress) => {\n    const totalPoints = chartData.length - 1;\n    const exactIndex = progress * totalPoints;\n    const lowerIndex = Math.floor(exactIndex);\n    const upperIndex = Math.min(lowerIndex + 1, totalPoints);\n    const fraction = exactIndex - lowerIndex;\n\n    // Enhanced smoothstep for flatter peaks and smoother curves\n    const easedFraction = fraction * fraction * fraction * (fraction * (fraction * 6 - 15) + 10); // smootherstep\n\n    const lowerValue = chartData[lowerIndex] || 0;\n    const upperValue = chartData[upperIndex] || 0;\n\n    return lowerValue + (upperValue - lowerValue) * easedFraction;\n  };\n\n  // Calculate current smoothed value based on line position - updated range to 15-40%\n  const currentValue = getSmoothedValue(lineProgress);\n  const displayValue = interpolate(currentValue, [0, 1], [15, 40], {\n    extrapolateLeft: \"clamp\",\n    extrapolateRight: \"clamp\",\n  });\n\n  return (\n    <AbsoluteFill style= {{ backgroundColor: \"#f0f0f0\" }\n}>\n  <div\n        style={\n  {\n    position: \"absolute\",\n      top: \"50%\",\n        left: \"50%\",\n          transform: `translate(-50%, -50%) scale(${cardScale})`,\n            opacity: cardOpacity,\n              width: \"400px\",\n                height: \"500px\",\n                  backgroundColor: \"#b8a7d9\",\n                    borderRadius: \"24px\",\n                      padding: \"40px\",\n                        display: \"flex\",\n                          flexDirection: \"column\",\n                            fontFamily: \"Inter\",\n        }\n}\n      >\n  {/* Header */ }\n  < div style = {{ marginBottom: \"30px\" }}>\n    <div\n            style={\n  {\n    fontSize: \"16px\",\n      fontWeight: \"600\",\n        color: \"#4a4a4a\",\n          marginBottom: \"20px\",\n            letterSpacing: \"1px\",\n            }\n}\n          >\n  GROWTH\n  < /div>\n  < div\nstyle = {{\n  fontSize: \"48px\",\n    fontWeight: \"800\",\n      color: \"#2d2d2d\",\n        lineHeight: \"1\",\n            }}\n          >\n  +{ displayValue.toFixed(0) } %\n  </div>\n  < /div>\n\n{/* Chart Container */ }\n<div\n          style={\n  {\n    flex: 1,\n      position: \"relative\",\n        marginBottom: \"40px\",\n          opacity: barsOpacity,\n          }\n}\n        >\n  {/* Chart Bars */ }\n  < div\nstyle = {{\n  display: \"flex\",\n    alignItems: \"flex-end\",\n      height: \"200px\",\n        gap: \"3px\",\n          paddingBottom: \"20px\",\n            }}\n          >\n  {\n    chartData.map((height, index) => (\n      <div\n                key= { index }\n                style = {{\n      flex: 1,\n      backgroundColor: \"#9d8bc9\",\n      height: `${height * 100}%`,\n      borderRadius: \"1px\",\n      opacity: 0.8,\n    }}\n  />\n            ))}\n</div>\n\n{/* Yellow Line and Dot */ }\n<div\n            style={\n  {\n    position: \"absolute\",\n      bottom: \"20px\",\n        left: `${lineProgress * 100}%`,\n          transform: \"translateX(-50%)\",\n            height: \"200px\",\n              display: \"flex\",\n                flexDirection: \"column\",\n                  alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n            }\n}\n          >\n  {/* Yellow Line - increased stroke and height matches current value */ }\n  < div\nstyle = {{\n  width: \"4px\", // Increased from 2px\n    height: `${currentValue * 180}px`, // Height matches current value\n      backgroundColor: \"#f4d03f\",\n        boxShadow: \"0 0 8px rgba(244, 208, 63, 0.3)\",\n          position: \"relative\",\n              }}\n            >\n  {/* Yellow Dot positioned at the top of the line */ }\n  < div\nstyle = {{\n  position: \"absolute\",\n    top: \"-6px\", // Position at top of line\n      left: \"50%\",\n        transform: \"translateX(-50%)\",\n          width: \"12px\",\n            height: \"12px\",\n              backgroundColor: \"#f4d03f\",\n                borderRadius: \"50%\",\n                  boxShadow: \"0 2px 8px rgba(244, 208, 63, 0.4)\",\n                }}\n/>\n  < /div>\n  < /div>\n  < /div>\n\n{/* Button */ }\n<div\n          style={\n  {\n    opacity: buttonOpacity,\n      transform: `scale(${buttonScale})`,\n          }\n}\n        >\n  <div\n            style={\n  {\n    backgroundColor: \"#2d2d2d\",\n      color: \"white\",\n        padding: \"16px 24px\",\n          borderRadius: \"8px\",\n            fontSize: \"14px\",\n              fontWeight: \"600\",\n                textAlign: \"center\",\n                  cursor: \"pointer\",\n                    display: \"flex\",\n                      alignItems: \"center\",\n                        justifyContent: \"center\",\n                          gap: \"8px\",\n            }\n}\n          >\n  <div\n              style={\n  {\n    width: \"6px\",\n      height: \"6px\",\n        backgroundColor: \"white\",\n          borderRadius: \"50%\",\n              }\n}\n/>\n            SEE MORE INSIGHTS\n  < /div>\n  < /div>\n  < /div>\n  < /AbsoluteFill>\n  );\n};\n\nexport const durationInFrames_A7K9M3P2 = 150;\nexport default TemplateScene;"}],"meta":{"templateId":"growth-graph-portrait","dbId":"22816869-0648-4306-99aa-af79b9c7ba4d","duration":180,"supportedFormats":["portrait","square"],"promptVariant":"phrase-1"}}
{"messages":[{"role":"system","content":"You are Bazaar's Remotion code generator. Respond with valid TSX only. Start with imports/const declarations and never add prose."},{"role":"user","content":"Auth modal animation in portrait (1080×1920). Leaning into a glassmorphism and premium look. Make sure we show login modal, email input, and password input. Use modal scale and gradient drift for motion. Target duration: 3.2 seconds (95 frames)."},{"role":"assistant","content":"const { AbsoluteFill, Sequence, spring, interpolate, useCurrentFrame, useVideoConfig, Img } = window.Remotion;\n\nconst script_A8B9C2D3 = [\n  { type: \"modal-scale-and-typing\", frames: 95 }\n];\n\nlet accumulatedFrames_A8B9C2D3 = 0;\nconst sequences_A8B9C2D3 = script_A8B9C2D3.map(scene => {\n  const start = accumulatedFrames_A8B9C2D3;\n  accumulatedFrames_A8B9C2D3 += scene.frames;\n  return { ...scene, start, end: accumulatedFrames_A8B9C2D3 };\n});\n\nconst totalFrames_A8B9C2D3 = script_A8B9C2D3.reduce((sum, s) => sum + s.frames, 0);\nexport const durationInFrames_A8B9C2D3 = totalFrames_A8B9C2D3;\n\nexport default function TemplateScene() {\n  const frame = useCurrentFrame();\n  const { fps } = useVideoConfig();\n\n  // Animated gradient background from scene 2\n  const cycleDuration = fps * 8;\n\n  // Animate hue 1: 240° → 230° (dark blue variations)\n  const hue1 = interpolate(\n    frame % cycleDuration,\n    [0, cycleDuration / 2, cycleDuration],\n    [240, 230, 240],\n    {\n      extrapolateLeft: 'clamp',\n      extrapolateRight: 'clamp'\n    }\n  );\n\n  // Animate hue 2: 192° → 185° (light blue variations)\n  const hue2 = interpolate(\n    frame % cycleDuration,\n    [0, cycleDuration / 2, cycleDuration],\n    [192, 185, 192],\n    {\n      extrapolateLeft: 'clamp',\n      extrapolateRight: 'clamp'\n    }\n  );\n\n  // Animate saturation: 100% → 95% → 100% for dark blue, 77% → 85% → 77% for light blue\n  const saturation1 = interpolate(\n    frame % cycleDuration,\n    [0, cycleDuration / 2, cycleDuration],\n    [100, 95, 100],\n    {\n      extrapolateLeft: 'clamp',\n      extrapolateRight: 'clamp'\n    }\n  );\n\n  const saturation2 = interpolate(\n    frame % cycleDuration,\n    [0, cycleDuration / 2, cycleDuration],\n    [77, 85, 77],\n    {\n      extrapolateLeft: 'clamp',\n      extrapolateRight: 'clamp'\n    }\n  );\n\n  // Animate lightness: 14% → 18% → 14% for dark blue, 62% → 58% → 62% for light blue\n  const lightness1 = interpolate(\n    frame % cycleDuration,\n    [0, cycleDuration / 2, cycleDuration],\n    [14, 18, 14],\n    {\n      extrapolateLeft: 'clamp',\n      extrapolateRight: 'clamp'\n    }\n  );\n\n  const lightness2 = interpolate(\n    frame % cycleDuration,\n    [0, cycleDuration / 2, cycleDuration],\n    [62, 58, 62],\n    {\n      extrapolateLeft: 'clamp',\n      extrapolateRight: 'clamp'\n    }\n  );\n\n  // Animate angle: ±25° around 135° (110° → 160°)\n  const angle = interpolate(\n    frame % cycleDuration,\n    [0, cycleDuration / 2, cycleDuration],\n    [110, 160, 110],\n    {\n      extrapolateLeft: 'clamp',\n      extrapolateRight: 'clamp'\n    }\n  );\n\n  const gradientStyle = `linear-gradient(${angle}deg, hsl(${hue1}, ${saturation1}%, ${lightness1}%), hsl(${hue2}, ${saturation2}%, ${lightness2}%))`;\n\n  // Modal scales up by 20% over the animation duration\n  const modalScaleProgress = spring({\n    frame,\n    fps,\n    config: { damping: 15, stiffness: 80 }\n  });\n  const modalScale = interpolate(modalScaleProgress, [0, 1], [1, 1.4]);\n\n  // Text scales in at the same time as modal\n  const textScaleProgress = spring({\n    frame,\n    fps,\n    config: { damping: 15, stiffness: 80 }\n  });\n  const textScale = interpolate(textScaleProgress, [0, 1], [0, 1]);\n  const textOpacity = interpolate(textScaleProgress, [0, 1], [0, 1]);\n\n  // Avatar animations - each avatar appears sequentially over 20 frames\n  const avatarStartFrame = 0; // Start immediately with modal\n  const avatarAnimationDuration = 20;\n  const avatarDelay = 5; // 5 frames between each avatar\n  \n  const avatar1Progress = interpolate(\n    frame,\n    [avatarStartFrame, avatarStartFrame + avatarAnimationDuration],\n    [0, 1],\n    { extrapolateLeft: 'clamp', extrapolateRight: 'clamp' }\n  );\n  \n  const avatar2Progress = interpolate(\n    frame,\n    [avatarStartFrame + avatarDelay, avatarStartFrame + avatarDelay + avatarAnimationDuration],\n    [0, 1],\n    { extrapolateLeft: 'clamp', extrapolateRight: 'clamp' }\n  );\n  \n  const avatar3Progress = interpolate(\n    frame,\n    [avatarStartFrame + avatarDelay * 2, avatarStartFrame + avatarDelay * 2 + avatarAnimationDuration],\n    [0, 1],\n    { extrapolateLeft: 'clamp', extrapolateRight: 'clamp' }\n  );\n  \n  const avatar4Progress = interpolate(\n    frame,\n    [avatarStartFrame + avatarDelay * 3, avatarStartFrame + avatarDelay * 3 + avatarAnimationDuration],\n    [0, 1],\n    { extrapolateLeft: 'clamp', extrapolateRight: 'clamp' }\n  );\n\n  // Typing animations start immediately\n  const emailText = \"elon@spacex.com\";\n  const passwordText = \"••••••••••••\";\n\n  const typedEmailLength = Math.max(0, Math.min(emailText.length, Math.floor(frame / 3)));\n  const typedPasswordLength = Math.max(0, Math.min(passwordText.length, Math.floor((frame - 30) / 2.5)));\n\n  return (\n    <AbsoluteFill style={{ background: gradientStyle }}>\n      <div\n        style={{\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: `translate(-50%, -50%) scale(${modalScale})`,\n          width: \"400px\",\n          borderRadius: \"24px\",\n          background: \"linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(18,18,18,1) 100%)\",\n          backdropFilter: \"blur(10px)\",\n          boxShadow: \"0 25px 50px rgba(0,0,0,0.5)\",\n          padding: \"32px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        }}\n      >\n        <div\n          style={{\n            width: \"48px\",\n            height: \"48px\",\n            borderRadius: \"50%\",\n            background: \"rgba(255,255,255,0.2)\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginBottom: \"24px\"\n          }}\n        >\n          <window.IconifyIcon \n            icon=\"mdi:hexagon-multiple\"\n            style={{\n              fontSize: \"24px\",\n              color: \"white\"\n            }}\n          />\n        </div>\n\n        <h2\n          style={{\n            fontSize: \"28px\",\n            fontFamily: \"Inter\",\n            fontWeight: \"600\",\n            color: \"white\",\n            marginBottom: \"32px\",\n            textAlign: \"center\"\n          }}\n        >\n          Bazaar\n        </h2>\n\n        <div style={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", gap: \"16px\" }}>\n          <input\n            style={{\n              width: \"100%\",\n              padding: \"12px 20px\",\n              borderRadius: \"12px\",\n              background: \"rgba(255,255,255,0.1)\",\n              border: \"none\",\n              color: \"white\",\n              fontSize: \"14px\",\n              fontFamily: \"Inter\",\n              outline: \"none\"\n            }}\n            placeholder=\"Email\"\n            value={emailText.substring(0, typedEmailLength)}\n            readOnly\n          />\n\n          <input\n            type=\"password\"\n            style={{\n              width: \"100%\",\n              padding: \"12px 20px\",\n              borderRadius: \"12px\",\n              background: \"rgba(255,255,255,0.1)\",\n              border: \"none\",\n              color: \"white\",\n              fontSize: \"14px\",\n              fontFamily: \"Inter\",\n              outline: \"none\"\n            }}\n            placeholder=\"Password\"\n            value={frame >= 30 ? passwordText.substring(0, typedPasswordLength) : \"\"}\n            readOnly\n          />\n        </div>\n\n        <div style={{ width: \"100%\", height: \"1px\", background: \"rgba(255,255,255,0.1)\", margin: \"24px 0\" }} />\n\n        <button\n          style={{\n            width: \"100%\",\n            padding: \"12px 20px\",\n            borderRadius: \"50px\",\n            background: \"rgba(255,255,255,0.1)\",\n            border: \"none\",\n            color: \"white\",\n            fontSize: \"14px\",\n            fontFamily: \"Inter\",\n            fontWeight: \"500\",\n            marginBottom: \"12px\",\n            cursor: \"pointer\"\n          }}\n        >\n          Sign in\n        </button>\n\n        <button\n          style={{\n            width: \"100%\",\n            padding: \"12px 20px\",\n            borderRadius: \"50px\",\n            background: \"linear-gradient(180deg, #232526 0%, #2d2e30 100%)\",\n            border: \"none\",\n            color: \"white\",\n            fontSize: \"14px\",\n            fontFamily: \"Inter\",\n            fontWeight: \"500\",\n            marginBottom: \"16px\",\n            cursor: \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            gap: \"8px\"\n          }}\n        >\n          <window.IconifyIcon \n            icon=\"mdi:google\"\n            style={{\n              fontSize: \"20px\",\n              color: \"#4285f4\"\n            }}\n          />\n          Continue with Google\n        </button>\n      </div>\n\n      <div\n        style={{\n          position: \"absolute\",\n          bottom: \"20%\",\n          left: \"50%\",\n          transform: `translateX(-50%) scale(${textScale})`,\n          textAlign: \"center\",\n          opacity: textOpacity\n        }}\n      >\n        <p\n          style={{\n            fontSize: \"28px\",\n            color: \"rgba(255,255,255,0.6)\",\n            fontFamily: \"Inter\",\n            marginBottom: \"24px\"\n          }}\n        >\n          Join <span style={{ color: \"white\", fontWeight: \"500\" }}>thousands</span> of developers who are already using Bazaar.\n        </p>\n\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            gap: \"-16px\"\n          }}\n        >\n          <img\n            src={window.BazaarAvatars['middle-eastern-man']}\n            style={{\n              width: \"64px\",\n              height: \"64px\",\n              borderRadius: \"50%\",\n              border: \"2px solid #181824\",\n              objectFit: \"cover\",\n              marginRight: \"-16px\",\n              transform: `scale(${avatar1Progress})`,\n              opacity: avatar1Progress\n            }}\n          />\n          <img\n            src={window.BazaarAvatars['white-woman']}\n            style={{\n              width: \"64px\",\n              height: \"64px\",\n              borderRadius: \"50%\",\n              border: \"2px solid #181824\",\n              objectFit: \"cover\",\n              marginRight: \"-16px\",\n              transform: `scale(${avatar2Progress})`,\n              opacity: avatar2Progress\n            }}\n          />\n          <img\n            src={window.BazaarAvatars['black-man']}\n            style={{\n              width: \"64px\",\n              height: \"64px\",\n              borderRadius: \"50%\",\n              border: \"2px solid #181824\",\n              objectFit: \"cover\",\n              marginRight: \"-16px\",\n              transform: `scale(${avatar3Progress})`,\n              opacity: avatar3Progress\n            }}\n          />\n          <img\n            src={window.BazaarAvatars['asian-woman']}\n            style={{\n              width: \"64px\",\n              height: \"64px\",\n              borderRadius: \"50%\",\n              border: \"2px solid #181824\",\n              objectFit: \"cover\",\n              transform: `scale(${avatar4Progress})`,\n              opacity: avatar4Progress\n            }}\n          />\n        </div>\n      </div>\n    </AbsoluteFill>\n  );\n}"}],"meta":{"templateId":"log-in-portrait","dbId":"96f88e7e-cc41-457c-82dc-c152cf0f90bd","duration":95,"supportedFormats":["portrait"],"promptVariant":"phrase-1"}}
{"messages":[{"role":"system","content":"You are Bazaar's Remotion code generator. Respond with valid TSX only. Start with imports/const declarations and never add prose."},{"role":"user","content":"Show a banking dashboard in landscape (1920×1080). Leaning into a modern and clean look. Make sure we show phone mock, cards, and charts. Use slide and scale for motion. Target duration: 4 seconds (120 frames)."},{"role":"assistant","content":"const { AbsoluteFill, useCurrentFrame, useVideoConfig, interpolate, spring, Img } = window.Remotion;\n\n// Auto-generated defaults for undefined variables\nconst padding = 16;\nconst margin = 8;\nconst gap = 12;\n\nconst TemplateScene = () => {\n  const frame = useCurrentFrame();\n  const { fps } = useVideoConfig();\n\n  const phoneScale = spring({ frame, fps,\n    config: {\n      damping: 200,\n      stiffness: 100,\n      mass: 1,\n    },\n  });\n\n  const contentOpacity = interpolate(frame, [10, 25], [0, 1], {\n    extrapolateLeft: \"clamp\",\n    extrapolateRight: \"clamp\",\n  });\n\n  const balanceScale = spring({\n    frame: frame - 15,\n    fps,\n    config: {\n      damping: 200,\n      stiffness: 100,\n      mass: 1,\n    },\n  });\n\n  // Slot machine effect for balance - animate from £12 to £24.14 (slower with cubic easing)\n  const balanceValue = interpolate(frame, [15, 75], [12, 24.14], {\n    extrapolateLeft: \"clamp\",\n    extrapolateRight: \"clamp\",\n    easing: (t) => t * t * (3 - 2 * t), // cubic easing\n  });\n\n  // Staggered transaction animations with scale effect - slower with cubic easing\n  const transaction1Scale = interpolate(\n    frame,\n    [15, 30, 50],\n    [0, 1.2, 1],\n    {\n      extrapolateLeft: \"clamp\",\n      extrapolateRight: \"clamp\",\n      easing: (t) => t * t * (3 - 2 * t), // cubic easing\n    }\n  );\n\n  const transaction2Scale = interpolate(\n    frame,\n    [25, 40, 60],\n    [0, 1.2, 1],\n    {\n      extrapolateLeft: \"clamp\",\n      extrapolateRight: \"clamp\",\n      easing: (t) => t * t * (3 - 2 * t), // cubic easing\n    }\n  );\n\n  const transaction3Scale = interpolate(\n    frame,\n    [35, 50, 70],\n    [0, 1.2, 1],\n    {\n      extrapolateLeft: \"clamp\",\n      extrapolateRight: \"clamp\",\n      easing: (t) => t * t * (3 - 2 * t), // cubic easing\n    }\n  );\n\n  const transaction4Scale = interpolate(\n    frame,\n    [45, 60, 80],\n    [0, 1.2, 1],\n    {\n      extrapolateLeft: \"clamp\",\n      extrapolateRight: \"clamp\",\n      easing: (t) => t * t * (3 - 2 * t), // cubic easing\n    }\n  );\n\n  const transactionOpacity = interpolate(frame, [15, 50], [0, 1], {\n    extrapolateLeft: \"clamp\",\n    extrapolateRight: \"clamp\",\n    easing: (t) => t * t * (3 - 2 * t), // cubic easing\n  });\n\n  return (\n    <AbsoluteFill style={{ backgroundColor: \"white\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n      {/* Phone Container */}\n      <div style={{\n        transform: `scale(${phoneScale})`,\n        width: \"375px\",\n        height: \"812px\",\n        position: \"relative\",\n        borderRadius: \"40px\",\n        backgroundColor: \"#000\",\n        padding: \"8px\",\n        boxShadow: \"0 20px 40px rgba(0,0,0,0.3)\",\n      }}>\n        {/* Phone Screen */}\n        <div style={{\n          width: \"100%\",\n          height: \"100%\",\n          borderRadius: \"32px\",\n          overflow: \"hidden\",\n          background: \"linear-gradient(135deg, #3c1361 0%, #5b21b6 50%, #312e81 100%)\",\n          position: \"relative\",\n        }}>\n          {/* Notch */}\n          <div style={{\n            position: \"absolute\",\n            top: \"0\",\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n            width: \"150px\",\n            height: \"30px\",\n            backgroundColor: \"#000\",\n            borderBottomLeftRadius: \"15px\",\n            borderBottomRightRadius: \"15px\",\n            zIndex: 10,\n          }} />\n\n          {/* Status Bar - Aligned with notch - INCREASED PADDING TOP */}\n          <div style={{\n            opacity: contentOpacity,\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            padding: \"12px 20px\",\n            paddingTop: \"20px\",\n            color: \"white\",\n            fontSize: \"16px\",\n            fontWeight: \"700\",\n            fontFamily: \"Inter\",\n            height: \"30px\",\n          }}>\n            <span>21:15</span>\n            <div style={{ display: \"flex\", alignItems: \"center\", gap: \"6px\" }}>\n              <window.IconifyIcon icon=\"mdi:signal\" style={{ fontSize: \"16px\" }} />\n              <window.IconifyIcon icon=\"mdi:wifi\" style={{ fontSize: \"16px\" }} />\n              <span style={{ fontSize: \"14px\" }}>68</span>\n              <window.IconifyIcon icon=\"mdi:battery\" style={{ fontSize: \"16px\" }} />\n            </div>\n          </div>\n\n          {/* Top Bar with Profile and Search - INCREASED MARGIN TOP */}\n          <div style={{\n            opacity: contentOpacity,\n            display: \"flex\",\n            alignItems: \"center\",\n            padding: \"0 20px\",\n            gap: \"12px\",\n            marginTop: \"18px\",\n          }}>\n            <div style={{\n              width: \"40px\",\n              height: \"40px\",\n              borderRadius: \"20px\",\n              backgroundColor: \"rgba(255,255,255,0.2)\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              overflow: \"hidden\",\n            }}>\n              <Img \n                src={window.BazaarAvatars['asian-woman']} \n                style={{\n                  width: \"100%\",\n                  height: \"100%\",\n                  objectFit: \"cover\"\n                }}\n              />\n            </div>\n            <div style={{\n              flex: 1,\n              height: \"40px\",\n              backgroundColor: \"rgba(255,255,255,0.15)\",\n              borderRadius: \"20px\",\n              display: \"flex\",\n              alignItems: \"center\",\n              padding: \"0 16px\",\n              gap: \"8px\",\n            }}>\n              <window.IconifyIcon icon=\"mdi:magnify\" style={{ fontSize: \"18px\", color: \"rgba(255,255,255,0.7)\" }} />\n              <span style={{ color: \"rgba(255,255,255,0.7)\", fontSize: \"16px\", fontFamily: \"Inter\", fontWeight: \"600\" }}>Search</span>\n            </div>\n            <div style={{\n              width: \"40px\",\n              height: \"40px\",\n              borderRadius: \"20px\",\n              backgroundColor: \"rgba(255,255,255,0.2)\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}>\n              <window.IconifyIcon icon=\"mdi:chart-bar\" style={{ fontSize: \"18px\", color: \"white\" }} />\n            </div>\n            <div style={{\n              width: \"40px\",\n              height: \"40px\",\n              borderRadius: \"20px\",\n              backgroundColor: \"rgba(255,255,255,0.2)\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}>\n              <window.IconifyIcon icon=\"mdi:credit-card\" style={{ fontSize: \"18px\", color: \"white\" }} />\n            </div>\n          </div>\n\n          {/* Main Balance Section */}\n          <div style={{\n            opacity: contentOpacity,\n            textAlign: \"center\",\n            marginTop: \"40px\",\n            transform: `scale(${balanceScale})`,\n          }}>\n            <div style={{\n              color: \"rgba(255,255,255,0.8)\",\n              fontSize: \"16px\",\n              fontFamily: \"Inter\",\n              fontWeight: \"600\",\n              marginBottom: \"8px\",\n            }}>\n              Main • GBP\n            </div>\n            <div style={{\n              color: \"white\",\n              fontSize: \"48px\",\n              fontWeight: \"700\",\n              fontFamily: \"Inter\",\n              marginBottom: \"20px\",\n            }}>\n              £{balanceValue.toFixed(2)}\n            </div>\n            <div style={{\n              display: \"inline-block\",\n              backgroundColor: \"rgba(255,255,255,0.2)\",\n              borderRadius: \"20px\",\n              padding: \"8px 20px\",\n              color: \"white\",\n              fontSize: \"16px\",\n              fontFamily: \"Inter\",\n              fontWeight: \"600\",\n            }}>\n              Accounts\n            </div>\n          </div>\n\n          {/* Action Buttons - Reduced padding/margin */}\n          <div style={{\n            opacity: contentOpacity,\n            display: \"flex\",\n            justifyContent: \"space-around\",\n            padding: \"0 10px\",\n            marginTop: \"50px\",\n          }}>\n            {[\n              { icon: \"mdi:plus\", label: \"Add money\" },\n              { icon: \"mdi:swap-horizontal\", label: \"Exchange\" },\n              { icon: \"mdi:format-list-bulleted\", label: \"Details\" },\n              { icon: \"mdi:dots-horizontal\", label: \"More\" },\n            ].map((item, index) => (\n              <div key={index} style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                gap: \"8px\",\n              }}>\n                <div style={{\n                  width: \"50px\",\n                  height: \"50px\",\n                  borderRadius: \"25px\",\n                  backgroundColor: \"rgba(255,255,255,0.2)\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}>\n                  <window.IconifyIcon icon={item.icon} style={{ fontSize: \"20px\", color: \"white\" }} />\n                </div>\n                <span style={{\n                  color: \"white\",\n                  fontSize: \"12px\",\n                  fontFamily: \"Inter\",\n                  fontWeight: \"600\",\n                }}>\n                  {item.label}\n                </span>\n              </div>\n            ))}\n          </div>\n\n          {/* Transaction List - Added Sainsbury's transaction */}\n          <div style={{\n            opacity: transactionOpacity,\n            padding: \"0 20px\",\n            marginTop: \"30px\",\n          }}>\n            <div style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              padding: \"12px 0\",\n              borderBottom: \"1px solid rgba(255,255,255,0.1)\",\n              transform: `scale(${transaction1Scale})`,\n            }}>\n              <div style={{ display: \"flex\", alignItems: \"center\", gap: \"12px\" }}>\n                <div style={{\n                  width: \"40px\",\n                  height: \"40px\",\n                  borderRadius: \"20px\",\n                  backgroundColor: \"rgba(255,255,255,0.2)\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  overflow: \"hidden\",\n                }}>\n                  <window.IconifyIcon icon=\"emojione:flag-for-united-kingdom\" style={{ fontSize: \"32px\" }} />\n                </div>\n                <div>\n                  <div style={{\n                    color: \"white\",\n                    fontSize: \"16px\",\n                    fontFamily: \"Inter\",\n                    fontWeight: \"600\",\n                  }}>\n                    Personal → Cara Chatfield\n                  </div>\n                  <div style={{\n                    color: \"rgba(255,255,255,0.6)\",\n                    fontSize: \"14px\",\n                    fontFamily: \"Inter\",\n                    fontWeight: \"500\",\n                  }}>\n                    4 November, 23:37\n                  </div>\n                </div>\n              </div>\n              <div style={{\n                color: \"white\",\n                fontSize: \"16px\",\n                fontFamily: \"Inter\",\n                fontWeight: \"600\",\n              }}>\n                -£6\n              </div>\n            </div>\n\n            <div style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              padding: \"12px 0\",\n              borderBottom: \"1px solid rgba(255,255,255,0.1)\",\n              transform: `scale(${transaction2Scale})`,\n            }}>\n              <div style={{ display: \"flex\", alignItems: \"center\", gap: \"12px\" }}>\n                <div style={{\n                  width: \"40px\",\n                  height: \"40px\",\n                  borderRadius: \"20px\",\n                  backgroundColor: \"#00b894\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  color: \"white\",\n                  fontSize: \"14px\",\n                  fontWeight: \"700\",\n                  fontFamily: \"Inter\",\n                }}>\n                  PP\n                </div>\n                <div>\n                  <div style={{\n                    color: \"white\",\n                    fontSize: \"16px\",\n                    fontFamily: \"Inter\",\n                    fontWeight: \"600\",\n                  }}>\n                    PADDYPOWER\n                  </div>\n                  <div style={{\n                    color: \"rgba(255,255,255,0.6)\",\n                    fontSize: \"14px\",\n                    fontFamily: \"Inter\",\n                    fontWeight: \"500\",\n                  }}>\n                    4 November, 18:52\n                  </div>\n                </div>\n              </div>\n              <div style={{\n                color: \"#10b981\",\n                fontSize: \"16px\",\n                fontFamily: \"Inter\",\n                fontWeight: \"600\",\n              }}>\n                +£18.92\n              </div>\n            </div>\n\n            {/* New Sainsbury's transaction */}\n            <div style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              padding: \"12px 0\",\n              borderBottom: \"1px solid rgba(255,255,255,0.1)\",\n              transform: `scale(${transaction3Scale})`,\n            }}>\n              <div style={{ display: \"flex\", alignItems: \"center\", gap: \"12px\" }}>\n                <div style={{\n                  width: \"40px\",\n                  height: \"40px\",\n                  borderRadius: \"20px\",\n                  backgroundColor: \"#FF8200\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  color: \"white\",\n                  fontSize: \"14px\",\n                  fontWeight: \"700\",\n                  fontFamily: \"Inter\",\n                }}>\n                  SB\n                </div>\n                <div>\n                  <div style={{\n                    color: \"white\",\n                    fontSize: \"16px\",\n                    fontFamily: \"Inter\",\n                    fontWeight: \"600\",\n                  }}>\n                    SAINSBURY'S\n                  </div>\n                  <div style={{\n                    color: \"rgba(255,255,255,0.6)\",\n                    fontSize: \"14px\",\n                    fontFamily: \"Inter\",\n                    fontWeight: \"500\",\n                  }}>\n                    3 November, 16:45\n                  </div>\n                </div>\n              </div>\n              <div style={{\n                color: \"white\",\n                fontSize: \"16px\",\n                fontFamily: \"Inter\",\n                fontWeight: \"600\",\n              }}>\n                -£11\n              </div>\n            </div>\n\n            {/* Starbucks transaction */}\n            <div style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              padding: \"12px 0\",\n              marginBottom: \"20px\",\n              transform: `scale(${transaction4Scale})`,\n            }}>\n              <div style={{ display: \"flex\", alignItems: \"center\", gap: \"12px\" }}>\n                <div style={{\n                  width: \"40px\",\n                  height: \"40px\",\n                  borderRadius: \"20px\",\n                  backgroundColor: \"#00704A\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  color: \"white\",\n                  fontSize: \"18px\",\n                }}>\n                  <window.IconifyIcon icon=\"simple-icons:starbucks\" style={{ fontSize: \"28px\", color: \"white\" }} />\n                </div>\n                <div>\n                  <div style={{\n                    color: \"white\",\n                    fontSize: \"16px\",\n                    fontFamily: \"Inter\",\n                    fontWeight: \"600\",\n                  }}>\n                    STARBUCKS COFFEE\n                  </div>\n                  <div style={{\n                    color: \"rgba(255,255,255,0.6)\",\n                    fontSize: \"14px\",\n                    fontFamily: \"Inter\",\n                    fontWeight: \"500\",\n                  }}>\n                    3 November, 14:22\n                  </div>\n                </div>\n              </div>\n              <div style={{\n                color: \"white\",\n                fontSize: \"16px\",\n                fontFamily: \"Inter\",\n                fontWeight: \"600\",\n              }}>\n                -£4.75\n              </div>\n            </div>\n          </div>\n\n          {/* Bottom Navigation - Reduced padding */}\n          <div style={{\n            position: \"absolute\",\n            bottom: \"30px\",\n            left: \"0\",\n            right: \"0\",\n            display: \"flex\",\n            justifyContent: \"space-around\",\n            padding: \"0 10px\",\n            opacity: transactionOpacity,\n          }}>\n            {[\n              { icon: \"mdi:home\", label: \"Home\", active: true },\n              { icon: \"mdi:chart-line\", label: \"Invest\" },\n              { icon: \"mdi:star\", label: \"Transfers\" },\n              { icon: \"mdi:bitcoin\", label: \"Crypto\" },\n              { icon: \"mdi:heart\", label: \"Lifestyle\" },\n            ].map((item, index) => (\n              <div key={index} style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                gap: \"2px\",\n              }}>\n                <window.IconifyIcon \n                  icon={item.icon} \n                  style={{ \n                    fontSize: \"24px\", \n                    color: item.active ? \"white\" : \"rgba(255,255,255,0.5)\" \n                  }} \n                />\n                <span style={{\n                  color: item.active ? \"white\" : \"rgba(255,255,255,0.5)\",\n                  fontSize: \"10px\",\n                  fontFamily: \"Inter\",\n                  fontWeight: \"600\",\n                }}>\n                  {item.label}\n                </span>\n              </div>\n            ))}\n          </div>\n\n          {/* Home Indicator */}\n          <div style={{\n            position: \"absolute\",\n            bottom: \"8px\",\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n            width: \"134px\",\n            height: \"5px\",\n            backgroundColor: \"white\",\n            borderRadius: \"3px\",\n            opacity: 0.3,\n          }} />\n        </div>\n      </div>\n    </AbsoluteFill>\n  );\n};\n\nexport const durationInFrames_A7B9C2E1 = 120;\nexport default TemplateScene;"}],"meta":{"templateId":"revolut-app","dbId":"bec6cc24-b737-4440-9441-f05b77b84fc9","duration":120,"supportedFormats":["landscape"],"promptVariant":"phrase-2"}}
{"messages":[{"role":"system","content":"You are Bazaar's Remotion code generator. Respond with valid TSX only. Start with imports/const declarations and never add prose."},{"role":"user","content":"Gradient headline effect in landscape (1920×1080). Leaning into a bold and energetic look. Make sure we show headline text and gradient overlay. Use scale and position shift for motion. Target duration: 4.7 seconds (140 frames)."},{"role":"assistant","content":"const { AbsoluteFill, useCurrentFrame, useVideoConfig, interpolate } = window.Remotion;\n\nexport default function DarkBGGradientText_me44v5an() {\n  window.RemotionGoogleFonts.loadFont(\"Inter\", { weights: [\"800\"] });\n  \n  const frame = useCurrentFrame();\n  const { fps, width, height } = useVideoConfig();\n\n  // Format detection for responsive sizing\n  const aspectRatio = width / height;\n  const isPortrait = aspectRatio < 1;\n  const isSquare = Math.abs(aspectRatio - 1) < 0.2;\n  \n  // Fixed font size for Bazaar\n  const fontSize = 250;\n  \n  const gradientPosition = interpolate(\n    frame,\n    [0, fps * 3],\n    [-200, 200],\n    {\n      extrapolateLeft: \"clamp\",\n      extrapolateRight: \"clamp\"\n    }\n  );\n  \n  // Initial scale animation for \"Bazaar\" entry\n  const initialTextScale = interpolate(\n    frame,\n    [0, 8],\n    [0.8, 1],\n    {\n      extrapolateLeft: \"clamp\",\n      extrapolateRight: \"clamp\"\n    }\n  );\n  \n  // Scale down animation starting at frame 28 (8 + 20)\n  const scaleDownAnimation = interpolate(\n    frame,\n    [28, 43], // 15 frames for smooth scale down\n    [1, 1/3],\n    {\n      extrapolateLeft: \"clamp\",\n      extrapolateRight: \"clamp\"\n    }\n  );\n  \n  // Move to left animation starting at frame 28 - increased distance to prevent overlap\n  const moveLeftAnimation = interpolate(\n    frame,\n    [28, 43],\n    [0, -width * 0.33], // Increased from 0.25 to 0.35 to move further left\n    {\n      extrapolateLeft: \"clamp\",\n      extrapolateRight: \"clamp\"\n    }\n  );\n  \n  // Combined scale (initial entry + scale down)\n  const finalScale = frame < 28 ? initialTextScale : initialTextScale * scaleDownAnimation;\n  \n  // Additional text words animation\n  const additionalWords = [\"is\", \"an\", \"ai\", \"user\", \"interface\", \"animator\"];\n  \n  return (\n    <AbsoluteFill\n      style={{\n        background: \"linear-gradient(135deg, #ff6b9d 0%, #ff8a5c 25%, #ffa726 50%, #ffcc02 75%, #ffeb3b 100%)\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        padding: \"40px\"\n      }}\n    >\n      {/* Bazaar text */}\n      <div\n        style={{\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: `translate(-50%, -50%) translateX(${moveLeftAnimation}px) scale(${finalScale})`,\n          fontSize: `${fontSize}px`,\n          fontFamily: \"Inter\",\n          fontWeight: \"800\",\n          textAlign: \"center\",\n          whiteSpace: \"nowrap\",\n          display: \"flex\",\n          gap: \"0.3em\",\n          flexDirection: \"row\",\n          lineHeight: 1.1\n        }}\n      >\n        {/* Bazaar word animation */}\n        <div\n          style={{\n            position: \"relative\",\n            transform: `translateY(${interpolate(\n              frame,\n              [0, 15],\n              [100, 0],\n              {\n                extrapolateLeft: \"clamp\",\n                extrapolateRight: \"clamp\"\n              }\n            )}px)`,\n            opacity: interpolate(\n              frame,\n              [0, 15],\n              [0, 1],\n              {\n                extrapolateLeft: \"clamp\",\n                extrapolateRight: \"clamp\"\n              }\n            )\n          }}\n        >\n          <div\n            style={{\n              color: \"transparent\",\n              userSelect: \"none\"\n            }}\n          >\n            Bazaar\n          </div>\n          \n          <div\n            style={{\n              position: \"absolute\",\n              top: \"0\",\n              left: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              background: `linear-gradient(90deg, #ffffff 0%, #f0f0f0 25%, #ffffff 50%, #f5f5f5 75%, #ffffff 100%)`,\n              backgroundPosition: `${gradientPosition}px 0`,\n              backgroundSize: \"400px 100%\",\n              backgroundRepeat: \"repeat-x\",\n              backgroundClip: \"text\",\n              WebkitBackgroundClip: \"text\",\n              color: \"transparent\",\n              WebkitTextFillColor: \"transparent\"\n            }}\n          >\n            Bazaar\n          </div>\n        </div>\n      </div>\n      \n      {/* Additional text animation - increased spacing to prevent overlap */}\n      <div\n        style={{\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: `translate(-50%, -50%) translateX(${width * 0.11}px)`, // Increased from 0.05 to 0.18 for more spacing\n          fontSize: `${fontSize / 3}px`, // Same size as scaled Bazaar\n          fontFamily: \"Inter\",\n          fontWeight: \"800\",\n          textAlign: \"left\",\n          whiteSpace: \"nowrap\",\n          display: \"flex\",\n          gap: \"0.3em\",\n          flexDirection: \"row\",\n          lineHeight: 1.1\n        }}\n      >\n        {additionalWords.map((word, index) => {\n          const wordStartFrame = 45 + (index * 8); // Start after Bazaar animation completes\n          const wordEndFrame = wordStartFrame + 12;\n          \n          // Slide up animation\n          const wordY = interpolate(\n            frame,\n            [wordStartFrame, wordEndFrame],\n            [50, 0],\n            {\n              extrapolateLeft: \"clamp\",\n              extrapolateRight: \"clamp\"\n            }\n          );\n          \n          // Opacity animation\n          const wordOpacity = interpolate(\n            frame,\n            [wordStartFrame, wordEndFrame],\n            [0, 1],\n            {\n              extrapolateLeft: \"clamp\",\n              extrapolateRight: \"clamp\"\n            }\n          );\n          \n          return (\n            <div\n              key={index}\n              style={{\n                position: \"relative\",\n                transform: `translateY(${wordY}px)`,\n                opacity: wordOpacity\n              }}\n            >\n              <div\n                style={{\n                  color: \"transparent\",\n                  userSelect: \"none\"\n                }}\n              >\n                {word}\n              </div>\n              \n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"0\",\n                  left: \"0\",\n                  width: \"100%\",\n                  height: \"100%\",\n                  background: `linear-gradient(90deg, #ffffff 0%, #f0f0f0 25%, #ffffff 50%, #f5f5f5 75%, #ffffff 100%)`,\n                  backgroundPosition: `${gradientPosition}px 0`,\n                  backgroundSize: \"400px 100%\",\n                  backgroundRepeat: \"repeat-x\",\n                  backgroundClip: \"text\",\n                  WebkitBackgroundClip: \"text\",\n                  color: \"transparent\",\n                  WebkitTextFillColor: \"transparent\"\n                }}\n              >\n                {word}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </AbsoluteFill>\n  );\n}\n\nexport const durationInFrames_me44v5an = 140;"}],"meta":{"templateId":"scale-down-text-effect","dbId":"d907e3e5-1c99-4f70-8454-9573156cea08","duration":140,"supportedFormats":["landscape"],"promptVariant":"phrase-2"}}
{"messages":[{"role":"system","content":"You are Bazaar's Remotion code generator. Respond with valid TSX only. Start with imports/const declarations and never add prose."},{"role":"user","content":"Testimonial animation in landscape (1920×1080). Leaning into a clean and professional look. Make sure we show quote text, avatar, and name. Use fade and slide for motion. Target duration: 7 seconds (210 frames)."},{"role":"assistant","content":"const { AbsoluteFill, Sequence, spring, interpolate, useCurrentFrame, useVideoConfig, Img } = window.Remotion;\n\nconst testimonials_8a7f2b3c = [\n  {\n    text: \"The support team is exceptional, guiding us through setup and providing ongoing assistance, ensuring our satisfaction.\",\n    name: \"Saman Malik\",\n    role: \"Customer Support Lead\",\n    avatar: window.BazaarAvatars['asian-woman']\n  },\n  {\n    text: \"Its robust features and quick support have transformed our workflow, making us significantly more efficient.\",\n    name: \"Zainab Hussain\", \n    role: \"Project Manager\",\n    avatar: window.BazaarAvatars['middle-eastern-man']\n  },\n  {\n    text: \"Using this ERP, our online presence and conversions significantly improved, boosting business performance.\",\n    name: \"Hassan Ali\",\n    role: \"E-commerce Manager\", \n    avatar: window.BazaarAvatars['black-man']\n  },\n  {\n    text: \"This ERP revolutionized our operations, streamlining finance and inventory. The cloud-based platform keeps us productive, even remotely.\",\n    name: \"Briana Patton\",\n    role: \"Operations Manager\",\n    avatar: window.BazaarAvatars['white-woman']\n  },\n  {\n    text: \"The smooth implementation exceeded expectations. It streamlined processes, improving overall business performance.\",\n    name: \"Aliza Khan\",\n    role: \"Business Analyst\",\n    avatar: window.BazaarAvatars['hispanic-man']\n  },\n  {\n    text: \"Our business functions improved with a user-friendly design and positive customer feedback.\",\n    name: \"Farhan Siddiqui\",\n    role: \"Marketing Director\",\n    avatar: window.BazaarAvatars['asian-woman']\n  }\n];\n\nconst script_8a7f2b3c = [\n  { type: \"header\", frames: 360 },\n  { type: \"testimonials\", frames: 360 }\n];\n\nlet accumulatedFrames_8a7f2b3c = 0;\nconst sequences_8a7f2b3c = script_8a7f2b3c.map(item => {\n  const sequence = { ...item, start: accumulatedFrames_8a7f2b3c };\n  accumulatedFrames_8a7f2b3c += item.frames;\n  return sequence;\n});\n\nconst totalFrames_8a7f2b3c = script_8a7f2b3c.reduce((sum, s) => sum + s.frames, 0);\nexport const durationInFrames_8a7f2b3c = totalFrames_8a7f2b3c;\n\nconst TestimonialCard = ({ testimonial, delay, speed }) => {\n  const frame = useCurrentFrame();\n  const { fps } = useVideoConfig();\n  \n  const cardSpring = spring({\n    frame: frame - delay,\n    fps,\n    config: { damping: 12, stiffness: 100 }\n  });\n\n  const translateY = interpolate(\n    frame,\n    [0, 600],\n    [0, -2000],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"extend\" }\n  ) * speed;\n\n  const opacity = interpolate(cardSpring, [0, 1], [0, 1], { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" });\n  const scale = interpolate(cardSpring, [0, 1], [0.8, 1], { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" });\n\n  return (\n    <div\n      style={{\n        backgroundColor: \"white\",\n        borderRadius: \"24px\",\n        padding: \"40px\",\n        marginBottom: \"24px\",\n        maxWidth: \"320px\",\n        width: \"100%\",\n        boxShadow: \"0 10px 25px rgba(0,0,0,0.1)\",\n        border: \"1px solid rgba(0,0,0,0.05)\",\n        opacity,\n        transform: `translateY(${translateY}px) scale(${scale})`,\n        transformOrigin: \"center\"\n      }}\n    >\n      <div\n        style={{\n          fontSize: \"16px\",\n          lineHeight: \"1.5\",\n          color: \"#374151\",\n          marginBottom: \"20px\",\n          fontFamily: \"Inter\",\n          fontWeight: \"400\"\n        }}\n      >\n        {testimonial.text}\n      </div>\n      <div style={{ display: \"flex\", alignItems: \"center\", gap: \"12px\" }}>\n        <img\n          src={testimonial.avatar}\n          style={{\n            width: \"40px\",\n            height: \"40px\",\n            borderRadius: \"50%\",\n            objectFit: \"cover\"\n          }}\n        />\n        <div>\n          <div\n            style={{\n              fontFamily: \"Inter\",\n              fontWeight: \"600\",\n              fontSize: \"14px\",\n              color: \"#111827\",\n              lineHeight: \"1.2\"\n            }}\n          >\n            {testimonial.name}\n          </div>\n          <div\n            style={{\n              fontFamily: \"Inter\",\n              fontWeight: \"400\",\n              fontSize: \"14px\",\n              color: \"#6B7280\",\n              lineHeight: \"1.2\"\n            }}\n          >\n            {testimonial.role}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst TestimonialColumn = ({ testimonials, speed, delay }) => {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n      {[...testimonials, ...testimonials, ...testimonials].map((testimonial, index) => (\n        <TestimonialCard\n          key={index}\n          testimonial={testimonial}\n          delay={delay}\n          speed={speed}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default function TemplateScene() {\n  const frame = useCurrentFrame();\n  const { fps } = useVideoConfig();\n\n  const headerSequence = sequences_8a7f2b3c.find(s => s.type === \"header\");\n  const testimonialsSequence = sequences_8a7f2b3c.find(s => s.type === \"testimonials\");\n\n  return (\n    <AbsoluteFill\n      style={{\n        background: \"linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%)\",\n        fontFamily: \"Inter\"\n      }}\n    >\n      {/* Header Section */}\n      {frame >= headerSequence.start && frame < headerSequence.start + headerSequence.frames && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"80px\",\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n            textAlign: \"center\",\n            zIndex: 10\n          }}\n        >\n          <h1\n            style={{\n              fontSize: \"48px\",\n              fontWeight: \"800\",\n              color: \"#111827\",\n              marginBottom: \"16px\",\n              fontFamily: \"Inter\",\n              opacity: interpolate(\n                spring({\n                  frame: frame - headerSequence.start,\n                  fps,\n                  config: { damping: 12, stiffness: 100 }\n                }),\n                [0, 1],\n                [0, 1],\n                { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n              ),\n              transform: `translateY(${interpolate(\n                spring({\n                  frame: frame - headerSequence.start,\n                  fps,\n                  config: { damping: 12, stiffness: 100 }\n                }),\n                [0, 1],\n                [30, 0],\n                { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n              )}px)`\n            }}\n          >\n            What our users say\n          </h1>\n        </div>\n      )}\n\n      {/* Testimonials Columns */}\n      {frame >= headerSequence.start && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"200px\",\n            left: \"0\",\n            right: \"0\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            gap: \"32px\",\n            overflow: \"hidden\",\n            height: \"calc(100vh - 200px)\"\n          }}\n        >\n          <TestimonialColumn\n            testimonials={testimonials_8a7f2b3c.slice(0, 2)}\n            speed={0.8}\n            delay={headerSequence.start}\n          />\n          <TestimonialColumn\n            testimonials={testimonials_8a7f2b3c.slice(2, 4)}\n            speed={1.0}\n            delay={headerSequence.start}\n          />\n          <TestimonialColumn\n            testimonials={testimonials_8a7f2b3c.slice(4, 6)}\n            speed={1.2}\n            delay={headerSequence.start}\n          />\n        </div>\n      )}\n    </AbsoluteFill>\n  );\n}"}],"meta":{"templateId":"testimonials-db","dbId":"c6f94642-c762-40ef-88e0-434ba0294f80","duration":210,"supportedFormats":["landscape"],"promptVariant":"phrase-1"}}
{"messages":[{"role":"system","content":"You are Bazaar's Remotion code generator. Respond with valid TSX only. Start with imports/const declarations and never add prose."},{"role":"user","content":"Need a landscape (1920×1080) Remotion scene for analytics card showcasing animated line growth and kpis. Dashboard analytics card with animated line growth and percentage counters. This should work well for analytics dashboard, investor update, and product KPI section. Include line graph, percentage badge, and supporting stats. Animate with line draw, number counter, and card entrance. Keep the style modern, clean, and professional. Palette should lean on brand gradient and neon accent. Keep it around 4 seconds (120 frames)."},{"role":"assistant","content":"const { AbsoluteFill, useCurrentFrame, useVideoConfig, interpolate, spring, Img } = window.Remotion;\n\n// Auto-generated defaults for undefined variables\nconst padding = 16;\nconst gap = 12;\n\nconst TemplateScene = () => {\n  const frame = useCurrentFrame();\n  const { fps } = useVideoConfig();\n\n  // Card entrance animation\n  const cardScale = spring({ frame, fps,\n    config: {\n      damping: 12,\n      stiffness: 100,\n      mass: 0.5,\n    },\n  });\n\n  const cardOpacity = interpolate(frame, [0, 20], [0, 1], {\n    extrapolateLeft: \"clamp\",\n    extrapolateRight: \"clamp\",\n  });\n\n  // Growth percentage animation\n  const growthProgress = interpolate(frame, [20, 80], [0, 1], {\n    extrapolateLeft: \"clamp\",\n    extrapolateRight: \"clamp\",\n  });\n\n  const currentGrowth = interpolate(growthProgress, [0, 1], [0, 24.15], {\n    extrapolateLeft: \"clamp\",\n    extrapolateRight: \"clamp\",\n  });\n\n  // Yellow line animation with slow in slow out easing - starts from first frame\n  const lineProgressRaw = interpolate(frame, [0, 120], [0, 1], {\n    extrapolateLeft: \"clamp\",\n    extrapolateRight: \"clamp\",\n  });\n  \n  // Apply slow in slow out easing (ease-in-out cubic)\n  const lineProgress = lineProgressRaw < 0.5 \n    ? 2 * lineProgressRaw * lineProgressRaw \n    : 1 - Math.pow(-2 * lineProgressRaw + 2, 2) / 2;\n\n  // Chart bars animation - visible from start\n  const barsOpacity = 1;\n\n  // Button animation - visible from start\n  const buttonOpacity = 1;\n  const buttonScale = 1;\n\n  // Chart data with custom height sequence - removed final drop, ends at steady level\n  const chartData = [\n    0.3, 0.32, 0.35, 0.38, 0.4, 0.38, 0.35, 0.32, 0.3, 0.32, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.58, 0.55, 0.5, 0.45,\n    0.42, 0.4, 0.38, 0.36, 0.34, 0.32, 0.3, 0.32, 0.35, 0.38, 0.42, 0.46, 0.5, 0.54, 0.58, 0.6, 0.6\n  ];\n\n  // Enhanced smooth interpolation with better curve flattening\n  const getSmoothedValue = (progress) => {\n    const totalPoints = chartData.length - 1;\n    const exactIndex = progress * totalPoints;\n    const lowerIndex = Math.floor(exactIndex);\n    const upperIndex = Math.min(lowerIndex + 1, totalPoints);\n    const fraction = exactIndex - lowerIndex;\n    \n    // Enhanced smoothstep for flatter peaks and smoother curves\n    const easedFraction = fraction * fraction * fraction * (fraction * (fraction * 6 - 15) + 10); // smootherstep\n    \n    const lowerValue = chartData[lowerIndex] || 0;\n    const upperValue = chartData[upperIndex] || 0;\n    \n    return lowerValue + (upperValue - lowerValue) * easedFraction;\n  };\n\n  // Calculate current smoothed value based on line position - updated range to 15-40%\n  const currentValue = getSmoothedValue(lineProgress);\n  const displayValue = interpolate(currentValue, [0, 1], [15, 40], {\n    extrapolateLeft: \"clamp\",\n    extrapolateRight: \"clamp\",\n  });\n\n  return (\n    <AbsoluteFill style={{ backgroundColor: \"#f0f0f0\" }}>\n      <div\n        style={{\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: `translate(-50%, -50%) scale(${cardScale})`,\n          opacity: cardOpacity,\n          width: \"400px\",\n          height: \"500px\",\n          backgroundColor: \"#b8a7d9\",\n          borderRadius: \"24px\",\n          padding: \"40px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          fontFamily: \"Inter\",\n        }}\n      >\n        {/* Header */}\n        <div style={{ marginBottom: \"30px\" }}>\n          <div\n            style={{\n              fontSize: \"16px\",\n              fontWeight: \"600\",\n              color: \"#4a4a4a\",\n              marginBottom: \"20px\",\n              letterSpacing: \"1px\",\n            }}\n          >\n            GROWTH\n          </div>\n          <div\n            style={{\n              fontSize: \"48px\",\n              fontWeight: \"800\",\n              color: \"#2d2d2d\",\n              lineHeight: \"1\",\n            }}\n          >\n            +{displayValue.toFixed(0)}%\n          </div>\n        </div>\n\n        {/* Chart Container */}\n        <div\n          style={{\n            flex: 1,\n            position: \"relative\",\n            marginBottom: \"40px\",\n            opacity: barsOpacity,\n          }}\n        >\n          {/* Chart Bars */}\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"flex-end\",\n              height: \"200px\",\n              gap: \"3px\",\n              paddingBottom: \"20px\",\n            }}\n          >\n            {chartData.map((height, index) => (\n              <div\n                key={index}\n                style={{\n                  flex: 1,\n                  backgroundColor: \"#9d8bc9\",\n                  height: `${height * 100}%`,\n                  borderRadius: \"1px\",\n                  opacity: 0.8,\n                }}\n              />\n            ))}\n          </div>\n\n          {/* Yellow Line and Dot */}\n          <div\n            style={{\n              position: \"absolute\",\n              bottom: \"20px\",\n              left: `${lineProgress * 100}%`,\n              transform: \"translateX(-50%)\",\n              height: \"200px\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              justifyContent: \"flex-end\",\n            }}\n          >\n            {/* Yellow Line - increased stroke and height matches current value */}\n            <div\n              style={{\n                width: \"4px\", // Increased from 2px\n                height: `${currentValue * 180}px`, // Height matches current value\n                backgroundColor: \"#f4d03f\",\n                boxShadow: \"0 0 8px rgba(244, 208, 63, 0.3)\",\n                position: \"relative\",\n              }}\n            >\n              {/* Yellow Dot positioned at the top of the line */}\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"-6px\", // Position at top of line\n                  left: \"50%\",\n                  transform: \"translateX(-50%)\",\n                  width: \"12px\",\n                  height: \"12px\",\n                  backgroundColor: \"#f4d03f\",\n                  borderRadius: \"50%\",\n                  boxShadow: \"0 2px 8px rgba(244, 208, 63, 0.4)\",\n                }}\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Button */}\n        <div\n          style={{\n            opacity: buttonOpacity,\n            transform: `scale(${buttonScale})`,\n          }}\n        >\n          <div\n            style={{\n              backgroundColor: \"#2d2d2d\",\n              color: \"white\",\n              padding: \"16px 24px\",\n              borderRadius: \"8px\",\n              fontSize: \"14px\",\n              fontWeight: \"600\",\n              textAlign: \"center\",\n              cursor: \"pointer\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              gap: \"8px\",\n            }}\n          >\n            <div\n              style={{\n                width: \"6px\",\n                height: \"6px\",\n                backgroundColor: \"white\",\n                borderRadius: \"50%\",\n              }}\n            />\n            SEE MORE INSIGHTS\n          </div>\n        </div>\n      </div>\n    </AbsoluteFill>\n  );\n};\n\nexport const durationInFrames_A7K9M3P2 = 150;\nexport default TemplateScene;"}],"meta":{"templateId":"line-chart-db","dbId":"c2bac307-3ae3-44f5-ba5f-6109ac8abe24","duration":120,"supportedFormats":["landscape"],"promptVariant":"base"}}
{"messages":[{"role":"system","content":"You are Bazaar's Remotion code generator. Respond with valid TSX only. Start with imports/const declarations and never add prose."},{"role":"user","content":"Defocus intro animation in landscape (1920×1080). Leaning into a minimal and elegant look. Make sure we show headline text. Use blur reduction and opacity fade for motion. Target duration: 1 seconds (30 frames)."},{"role":"assistant","content":"const { AbsoluteFill, useCurrentFrame, interpolate } = window.Remotion;\n\nconst script_mf16d81c = [\n  { text: \"Blur\", frames: 30 }\n];\n\nconst sequences_mf16d81c = [];\nlet accumulatedFrames_mf16d81c = 0;\n\nscript_mf16d81c.forEach((item, index) => {\n  sequences_mf16d81c.push({\n    start: accumulatedFrames_mf16d81c,\n    duration: item.frames,\n    text: item.text\n  });\n  accumulatedFrames_mf16d81c += item.frames;\n});\n\nconst totalFrames_mf16d81c = script_mf16d81c.reduce((sum, s) => sum + s.frames, 0);\nexport const durationInFrames_mf16d81c = totalFrames_mf16d81c;\n\nexport default function TemplateScene() {\n  const frame = useCurrentFrame();\n  \n  const blurAmount = interpolate(\n    frame,\n    [0, 20],\n    [20, 0],\n    {\n      extrapolateLeft: \"clamp\",\n      extrapolateRight: \"clamp\"\n    }\n  );\n  \n  return (\n    <AbsoluteFill\n      style={{\n        backgroundColor: \"white\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        display: \"flex\"\n      }}\n    >\n      <div\n        style={{\n          fontSize: \"120px\",\n          fontFamily: \"Inter\",\n          fontWeight: \"700\",\n          color: \"black\",\n          filter: `blur(${blurAmount}px)`,\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\"\n        }}\n      >\n        Blur\n      </div>\n    </AbsoluteFill>\n  );\n}"}],"meta":{"templateId":"blur-db","dbId":"4fefddd4-f509-423a-953c-fc066d25d009","duration":30,"supportedFormats":["landscape","portrait","square"],"promptVariant":"phrase-2"}}
{"messages":[{"role":"system","content":"You are Bazaar's Remotion code generator. Respond with valid TSX only. Start with imports/const declarations and never add prose."},{"role":"user","content":"Search results animation in landscape (1920×1080). Leaning into a modern and tech look. Make sure we show search bar, cards, and icons. Use slide and fade for motion. Target duration: 6 seconds (180 frames)."},{"role":"assistant","content":"const { AbsoluteFill, Sequence, spring, interpolate, useCurrentFrame, useVideoConfig, Img, Video } = window.Remotion;\n\nconst script_e54e7158_v2 = [\n  { type: 'search-bar', frames: 180 }\n];\n\nlet accumulatedFrames_e54e7158_v2 = 0;\nconst sequences_e54e7158_v2 = [];\n\nscript_e54e7158_v2.forEach((item, index) => {\n  sequences_e54e7158_v2.push({\n    ...item,\n    start: accumulatedFrames_e54e7158_v2,\n    id: index\n  });\n  accumulatedFrames_e54e7158_v2 += item.frames;\n});\n\nconst totalFrames_e54e7158_v2 = script_e54e7158_v2.reduce((sum, s) => sum + s.frames, 0);\nexport const durationInFrames_e54e7158 = totalFrames_e54e7158_v2;\n\nexport default function TemplateScene() {\n  window.RemotionGoogleFonts.loadFont(\"Roboto\", { weights: [\"400\", \"500\"] });\n  \n  const frame = useCurrentFrame();\n  const { fps, width } = useVideoConfig();\n\n  const searchBarScale = interpolate(frame, [20, 35], [0, 2], { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\", easing: (t) => 1 - Math.pow(1 - t, 3) });\n\n  const logoOpacity = interpolate(frame, [0, 20], [0, 1], { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\", easing: (t) => 1 - Math.pow(1 - t, 3) });\n  const logoScale = interpolate(frame, [0, 25], [0, 2], { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\", easing: (t) => 1 - Math.pow(1 - t, 3) });\n  const searchBarOpacity = interpolate(frame, [20, 40], [0, 1], { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\", easing: (t) => 1 - Math.pow(1 - t, 3) });\n\n  // Typewriter effect for search text\n  const searchText = \"Campervan spots in the French alps that have good views of sunrise and sunset and there's toilets/water nearby but no people.\";\n  const typewriterStartFrame = 45;\n  const typewriterSpeed = 2; // characters per frame\n  const charactersToShow = Math.max(0, Math.floor((frame - typewriterStartFrame) * typewriterSpeed));\n  const displayedText = searchText.slice(0, charactersToShow);\n  \n  // Reverted width to smaller, more standard size\n  const searchBarWidth = Math.min(width * 0.6, 600);\n  \n  // Calculate number of lines based on text length and container width\n  const charsPerLine = Math.floor(searchBarWidth / 12); // More accurate calculation based on actual width\n  const numberOfLines = Math.max(1, Math.ceil(displayedText.length / charsPerLine));\n  \n  // Increased base height and dynamic height calculation\n  const baseHeight = 60; // Increased from 44 to 60\n  const lineHeight = 28;\n  const twoLineHeight = baseHeight + lineHeight + 8; // Height for exactly 2 lines\n  const dynamicHeight = baseHeight + (numberOfLines - 1) * lineHeight + 8;\n  \n  // Animate height change - but at frame 96 keep two lines of height\n  const targetHeight = frame >= 96 ? twoLineHeight : dynamicHeight;\n  const searchBarHeight = interpolate(\n    frame,\n    [typewriterStartFrame, typewriterStartFrame + 30],\n    [baseHeight, targetHeight],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  // Dynamic border radius - pill shaped for single line, 15px for multi-line\n  const isMultiLine = numberOfLines > 1;\n  const borderRadius = isMultiLine ? \"15px\" : \"50px\";\n\n  return (\n    <AbsoluteFill style={{ backgroundColor: \"#000000\" }}>\n      {/* Google Logo */}\n      <div style={{\n        position: \"absolute\",\n        top: \"calc(35% - 50px)\",\n        left: \"50%\",\n        transform: `translate(-50%, -50%) scale(${logoScale})`,\n        opacity: logoOpacity\n      }}>\n        <div style={{\n          fontSize: \"90px\",\n          fontFamily: \"Roboto\",\n          fontWeight: \"400\",\n          letterSpacing: \"-2px\"\n        }}>\n          <span style={{ color: \"#4285f4\" }}>G</span>\n          <span style={{ color: \"#ea4335\" }}>o</span>\n          <span style={{ color: \"#fbbc05\" }}>o</span>\n          <span style={{ color: \"#4285f4\" }}>g</span>\n          <span style={{ color: \"#34a853\" }}>l</span>\n          <span style={{ color: \"#ea4335\" }}>e</span>\n        </div>\n      </div>\n\n      {/* Search Bar */}\n      <div style={{\n        position: \"absolute\",\n        top: \"55%\",\n        left: \"50%\",\n        transform: `translate(-50%, -50%) scale(${searchBarScale})`,\n        opacity: searchBarOpacity,\n        width: `${searchBarWidth}px`,\n        height: `${searchBarHeight}px`,\n        border: \"2px solid transparent\",\n        borderRadius: borderRadius,\n        background: `\n          linear-gradient(#1F1F1F, #1F1F1F) padding-box,\n          linear-gradient(90deg, #66B2FF, #ADFF00, #FF4D4D, #66B2FF) border-box\n        `,\n        boxShadow: \"0 0 30px rgba(102,178,255,.5), 0 0 60px rgba(173,255,0,.3), 0 0 90px rgba(255,77,77,.2)\",\n        display: \"flex\",\n        alignItems: \"flex-start\",\n        paddingLeft: \"16px\",\n        paddingRight: \"16px\",\n        paddingTop: \"12px\",\n        paddingBottom: \"12px\",\n        transition: \"height 0.3s ease\",\n        position: \"relative\"\n      }}>\n        {/* Main Content Container */}\n        <div style={{\n          flex: 1,\n          display: \"flex\",\n          alignItems: \"flex-start\",\n          minHeight: \"36px\"\n        }}>\n          {/* Search Input with Typewriter Text */}\n          <div style={{\n            flex: 1,\n            fontSize: \"16px\",\n            fontFamily: \"Roboto\",\n            color: \"#e8eaed\",\n            fontWeight: \"400\",\n            lineHeight: \"24px\",\n            textAlign: \"left\",\n            wordWrap: \"break-word\",\n            whiteSpace: \"pre-wrap\",\n            overflow: \"hidden\",\n            paddingTop: \"6px\"\n          }}>\n            {displayedText}\n            {frame >= typewriterStartFrame && charactersToShow < searchText.length && (\n              <span style={{\n                opacity: Math.sin(frame * 0.5) > 0 ? 1 : 0,\n                color: \"#e8eaed\"\n              }}>|</span>\n            )}\n          </div>\n        </div>\n\n        {/* Right Side Icons Container - Positioned at bottom */}\n        <div style={{\n          position: \"absolute\",\n          bottom: \"12px\",\n          right: \"16px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: \"12px\",\n          flexShrink: 0\n        }}>\n          {/* Microphone Icon */}\n          <window.IconifyIcon \n            icon=\"material-symbols:mic\" \n            style={{\n              fontSize: \"20px\",\n              color: \"#9aa0a6\"\n            }} \n          />\n\n          {/* Blue Submit Button */}\n          <div style={{\n            width: \"36px\",\n            height: \"36px\",\n            backgroundColor: \"#4285f4\",\n            borderRadius: \"50%\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            cursor: \"pointer\"\n          }}>\n            <window.IconifyIcon \n              icon=\"material-symbols:arrow-upward\" \n              style={{\n                fontSize: \"18px\",\n                color: \"#ffffff\"\n              }} \n            />\n          </div>\n        </div>\n      </div>\n    </AbsoluteFill>\n  );\n}"}],"meta":{"templateId":"google-ai-search","dbId":"4cf2f12b-f0ce-4666-b0a2-09a9a9525488","duration":180,"supportedFormats":["landscape"],"promptVariant":"phrase-2"}}
{"messages":[{"role":"system","content":"You are Bazaar's Remotion code generator. Respond with valid TSX only. Start with imports/const declarations and never add prose."},{"role":"user","content":"Glitter headline in landscape (1920×1080). Leaning into a magical and playful look. Make sure we show headline text and sparkle particles. Use particle sparkle and trail for motion. Target duration: 3.6 seconds (108 frames)."},{"role":"assistant","content":"const { AbsoluteFill, Sequence, spring, interpolate, useCurrentFrame, useVideoConfig, Img } = window.Remotion;\n\nconst script_A8B9C2D1 = [\n  { type: \"sparkleText\", text: \"Sparkles\", frames: 120 }\n];\n\nlet accumulatedFrames_A8B9C2D1 = 0;\nconst sequences_A8B9C2D1 = [];\n\nscript_A8B9C2D1.forEach((item, index) => {\n  sequences_A8B9C2D1.push({\n    ...item,\n    start: accumulatedFrames_A8B9C2D1,\n    end: accumulatedFrames_A8B9C2D1 + item.frames\n  });\n  accumulatedFrames_A8B9C2D1 += item.frames;\n});\n\nconst totalFrames_A8B9C2D1 = script_A8B9C2D1.reduce((sum, s) => sum + s.frames, 0);\nexport const durationInFrames_A8B9C2D1 = totalFrames_A8B9C2D1;\n\nconst Sparkle = ({ x, y, color, delay, scale, frame, fps }) => {\n  const sparkleProgress = spring({\n    frame: frame - delay,\n    fps,\n    config: { damping: 15, stiffness: 200 }\n  });\n\n  const opacity = interpolate(\n    frame - delay,\n    [0, 15, 45, 60],\n    [0, 1, 1, 0],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const sparkleScale = interpolate(\n    sparkleProgress,\n    [0, 1],\n    [0, scale * 2],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const rotation = interpolate(\n    frame - delay,\n    [0, 60],\n    [75, 225],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        left: x,\n        top: y,\n        opacity,\n        transform: `scale(${sparkleScale}) rotate(${rotation}deg)`,\n        pointerEvents: \"none\",\n        zIndex: 20\n      }}\n    >\n      <svg width=\"28\" height=\"28\" viewBox=\"0 0 21 21\">\n        <path\n          d=\"M9.82531 0.843845C10.0553 0.215178 10.9446 0.215178 11.1746 0.843845L11.8618 2.72026C12.4006 4.19229 12.3916 6.39157 13.5 7.5C14.6084 8.60843 16.8077 8.59935 18.2797 9.13822L20.1561 9.82534C20.7858 10.0553 20.7858 10.9447 20.1561 11.1747L18.2797 11.8618C16.8077 12.4007 14.6084 12.3916 13.5 13.5C12.3916 14.6084 12.4006 16.8077 11.8618 18.2798L11.1746 20.1562C10.9446 20.7858 10.0553 20.7858 9.82531 20.1562L9.13819 18.2798C8.59932 16.8077 8.60843 14.6084 7.5 13.5C6.39157 12.3916 4.19225 12.4007 2.72023 11.8618L0.843814 11.1747C0.215148 10.9447 0.215148 10.0553 0.843814 9.82534L2.72023 9.13822C4.19225 8.59935 6.39157 8.60843 7.5 7.5C8.60843 6.39157 8.59932 4.19229 9.13819 2.72026L9.82531 0.843845Z\"\n          fill={color}\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default function TemplateScene() {\n  const frame = useCurrentFrame();\n  const { fps, width, height } = useVideoConfig();\n\n  const sparkles = [\n    { id: \"1\", x: \"20%\", y: \"30%\", color: \"#9E7AFF\", delay: 10, scale: 1.0 },\n    { id: \"2\", x: \"80%\", y: \"25%\", color: \"#FE8BBB\", delay: 20, scale: 1.5 },\n    { id: \"3\", x: \"25%\", y: \"70%\", color: \"#9E7AFF\", delay: 30, scale: 0.8 },\n    { id: \"4\", x: \"75%\", y: \"75%\", color: \"#FE8BBB\", delay: 15, scale: 1.2 },\n    { id: \"5\", x: \"50%\", y: \"20%\", color: \"#9E7AFF\", delay: 25, scale: 1.1 },\n    { id: \"6\", x: \"15%\", y: \"50%\", color: \"#FE8BBB\", delay: 35, scale: 0.9 },\n    { id: \"7\", x: \"85%\", y: \"55%\", color: \"#9E7AFF\", delay: 40, scale: 1.4 },\n    { id: \"8\", x: \"55%\", y: \"85%\", color: \"#FE8BBB\", delay: 18, scale: 1.0 }\n  ];\n\n  const textProgress = spring({\n    frame: frame - 5,\n    fps,\n    config: { damping: 12, stiffness: 100 }\n  });\n\n  const textOpacity = interpolate(\n    textProgress,\n    [0, 1],\n    [0, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const textScale = interpolate(\n    textProgress,\n    [0, 1],\n    [1.6, 2],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  // Calculate responsive font size based on viewport width\n  const responsiveFontSize = Math.min(width * 0.12, height * 0.15);\n\n  return (\n    <AbsoluteFill style={{ backgroundColor: \"#ffffff\" }}>\n      {frame >= 0 && frame < 120 && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: `translate(-50%, -50%) scale(${textScale})`,\n            opacity: textOpacity\n          }}\n        >\n          <div style={{ position: \"relative\", display: \"inline-block\" }}>\n            {sparkles.map((sparkle) => (\n              <Sparkle\n                key={sparkle.id}\n                x={sparkle.x}\n                y={sparkle.y}\n                color={sparkle.color}\n                delay={sparkle.delay}\n                scale={sparkle.scale}\n                frame={frame}\n                fps={fps}\n              />\n            ))}\n            <div\n              style={{\n                fontFamily: \"Inter\",\n                fontWeight: \"900\",\n                fontSize: `${responsiveFontSize}px`,\n                color: \"#000000\",\n                textAlign: \"center\",\n                letterSpacing: \"-0.02em\",\n                whiteSpace: \"nowrap\"\n              }}\n            >\n              Sparkles\n            </div>\n          </div>\n        </div>\n      )}\n    </AbsoluteFill>\n  );\n}"}],"meta":{"templateId":"text-sparkles","dbId":"f6444a90-fbcf-4c97-9b6c-fb43c506de6e","duration":108,"supportedFormats":["landscape"],"promptVariant":"phrase-2"}}
{"messages":[{"role":"system","content":"You are Bazaar's Remotion code generator. Respond with valid TSX only. Start with imports/const declarations and never add prose."},{"role":"user","content":"Airbnb style hero in landscape (1920×1080). Leaning into a friendly and lifestyle look. Make sure we show hero image, property cards, and ratings. Use fade and parallax for motion. Target duration: 15.7 seconds (470 frames)."},{"role":"assistant","content":"const { AbsoluteFill, useCurrentFrame, useVideoConfig, interpolate, Img } = window.Remotion;\n\nconst script_A8B9C2D3 = [\n  { type: 'splash_bg', frames: 15 },\n  { type: 'logo_and_tagline', frames: 15 },\n  { type: 'transition', frames: 10 },\n  { type: 'search_header', frames: 12 },\n  { type: 'listing_image', frames: 15 },\n  { type: 'guest_favorite', frames: 10 },\n  { type: 'property_title', frames: 12 },\n  { type: 'property_details', frames: 12 },\n  { type: 'price', frames: 12 },\n  { type: 'second_listing', frames: 15 },\n  { type: 'bottom_nav', frames: 12 },\n  { type: 'swipe_interaction', frames: 150 },\n  { type: 'status_bar_animations', frames: 180 }\n];\n\nconst swipeImages = [\n  \"https://images.unsplash.com/photo-1564013799919-ab600027ffc6?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80\",\n  \"https://images.unsplash.com/photo-1613977257363-707ba9348227?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80\",\n  \"https://images.unsplash.com/photo-1600607687939-ce8a6c25118c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2053&q=80\",\n  \"https://images.unsplash.com/photo-1600566753190-17f0baa2a6c3?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80\"\n];\n\nlet accumulatedFrames_A8B9C2D3 = 0;\nconst sequences_A8B9C2D3 = [];\n\nscript_A8B9C2D3.forEach((item, index) => {\n  sequences_A8B9C2D3.push({\n    ...item,\n    start: accumulatedFrames_A8B9C2D3,\n    end: accumulatedFrames_A8B9C2D3 + item.frames\n  });\n  accumulatedFrames_A8B9C2D3 += item.frames;\n});\n\nconst totalFrames_A8B9C2D3 = script_A8B9C2D3.reduce((sum, item) => sum + item.frames, 0);\n\nexport default function AirbnbApp_me45p5l9() {\n  window.RemotionGoogleFonts.loadFont(\"Inter\", { weights: [\"400\", \"500\", \"600\"] });\n  \n  const frame = useCurrentFrame();\n  const { fps, width, height } = useVideoConfig();\n\n  const logoAndTaglineScale = interpolate(\n    frame,\n    [0, 15],\n    [0, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const searchHeaderY = interpolate(\n    frame,\n    [sequences_A8B9C2D3[3].start, sequences_A8B9C2D3[3].start + 10],\n    [50, 0],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const listingImageY = interpolate(\n    frame,\n    [sequences_A8B9C2D3[4].start, sequences_A8B9C2D3[4].start + 12],\n    [100, 0],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const guestFavoriteScale = interpolate(\n    frame,\n    [sequences_A8B9C2D3[5].start, sequences_A8B9C2D3[5].start + 8],\n    [0, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const titleOpacity = interpolate(\n    frame,\n    [sequences_A8B9C2D3[6].start, sequences_A8B9C2D3[6].start + 10],\n    [0, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const detailsOpacity = interpolate(\n    frame,\n    [sequences_A8B9C2D3[7].start, sequences_A8B9C2D3[7].start + 10],\n    [0, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const priceScale = interpolate(\n    frame,\n    [sequences_A8B9C2D3[8].start, sequences_A8B9C2D3[8].start + 10],\n    [0.8, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const secondListingY = interpolate(\n    frame,\n    [sequences_A8B9C2D3[9].start, sequences_A8B9C2D3[9].start + 12],\n    [150, 0],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const bottomNavY = interpolate(\n    frame,\n    [sequences_A8B9C2D3[10].start, sequences_A8B9C2D3[10].start + 10],\n    [80, 0],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const swipeStartFrame = sequences_A8B9C2D3[11].start;\n  const totalSwipeProgress = interpolate(\n    frame,\n    [swipeStartFrame, swipeStartFrame + 150],\n    [0, 3],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n  \n  const currentSwipeIndex = Math.floor(totalSwipeProgress);\n  const swipeLocalProgress = totalSwipeProgress % 1;\n  \n  const swipeEasing = interpolate(\n    frame - (swipeStartFrame + currentSwipeIndex * 50),\n    [0, 50],\n    [0, 1],\n    { \n      extrapolateLeft: \"clamp\", \n      extrapolateRight: \"clamp\",\n      easing: (t) => t * t * (3 - 2 * t)\n    }\n  );\n  \n  const isInTransition = swipeLocalProgress > 0 && swipeLocalProgress < 1;\n  const easedProgress = isInTransition ? swipeEasing : (swipeLocalProgress >= 1 ? 1 : 0);\n  \n  const mainImageOffset = interpolate(\n    easedProgress,\n    [0, 1],\n    [0, -100],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n  \n  const parallaxDelay = 0.1;\n  const incomingImageProgress = interpolate(\n    easedProgress,\n    [0, parallaxDelay, 1],\n    [0, 0, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n  \n  const incomingImageOffset = interpolate(\n    incomingImageProgress,\n    [0, 1],\n    [100, 0],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n  \n  const currentImageIndex = currentSwipeIndex % 4;\n  const nextImageIndex = (currentSwipeIndex + 1) % 4;\n\n  const statusBarAnimationStart = sequences_A8B9C2D3[12].start;\n  const timeProgress = interpolate(\n    frame,\n    [statusBarAnimationStart, statusBarAnimationStart + 60],\n    [0, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n  \n  const times = [\"9:41\", \"9:42\", \"9:43\", \"9:44\"];\n  const currentTimeIndex = Math.floor(timeProgress * 3);\n  const currentTime = times[Math.min(currentTimeIndex, 3)];\n  \n  const batteryProgress = interpolate(\n    frame,\n    [statusBarAnimationStart, statusBarAnimationStart + 180],\n    [1, 0.85],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const phoneWidth = Math.min(width, height * 0.46);\n  const phoneHeight = phoneWidth * 2.16;\n  const phoneScaleFactor = Math.min(width / 375, height / 812);\n\n  // Format detection for responsive sizing\n  const aspectRatio = width / height;\n  const isPortrait = aspectRatio < 1;\n  const isSquare = Math.abs(aspectRatio - 1) < 0.2;\n  \n  // Responsive logo sizing based on format\n  const logoSize = isPortrait ? width * 0.15 : isSquare ? width * 0.18 : width * 0.12;\n\n  return (\n    <AbsoluteFill style={{ backgroundColor: \"#FF385C\", borderRadius: \"20px\" }}>\n      {frame >= 0 && frame < sequences_A8B9C2D3[2].end && (\n        <div style={{\n          position: \"absolute\",\n          top: \"40%\",\n          left: \"50%\",\n          transform: `translate(-50%, -50%) scale(${logoAndTaglineScale})`,\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          width: \"80%\"\n        }}>\n          <window.IconifyIcon \n            icon=\"simple-icons:airbnb\" \n            style={{\n              fontSize: `${logoSize}px`,\n              color: \"white\"\n            }}\n          />\n        </div>\n      )}\n\n      {frame >= 0 && frame < sequences_A8B9C2D3[2].end && (\n        <div style={{\n          position: \"absolute\",\n          top: \"60%\",\n          left: \"50%\",\n          transform: `translate(-50%, -50%) scale(${logoAndTaglineScale})`,\n          color: \"white\",\n          fontSize: `${width * 0.08}px`,\n          fontFamily: \"Inter\",\n          fontWeight: \"400\",\n          width: \"80%\",\n          textAlign: \"center\"\n        }}>\n          Belong Anywhere\n        </div>\n      )}\n\n      {frame >= sequences_A8B9C2D3[2].end && (\n        <div style={{\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: `translate(-50%, -50%) scale(${phoneScaleFactor})`,\n          width: \"375px\",\n          height: \"812px\",\n          backgroundColor: \"#000000\",\n          borderRadius: \"40px\",\n          padding: \"8px\"\n        }}>\n          <div style={{\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"#FFFFFF\",\n            borderRadius: \"32px\",\n            overflow: \"hidden\",\n            position: \"relative\"\n          }}>\n            \n            <div style={{\n              position: \"absolute\",\n              top: \"0px\",\n              left: \"0px\",\n              right: \"0px\",\n              height: \"60px\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              paddingLeft: \"20px\",\n              paddingRight: \"20px\",\n              zIndex: 10\n            }}>\n              <div style={{\n                fontSize: \"16px\",\n                fontFamily: \"Inter\",\n                fontWeight: \"600\",\n                color: \"#000000\"\n              }}>\n                {frame >= statusBarAnimationStart ? currentTime : \"9:41\"}\n              </div>\n              <div style={{\n                width: \"120px\",\n                height: \"30px\",\n                backgroundColor: \"#000000\",\n                borderRadius: \"15px\"\n              }} />\n              <div style={{\n                display: \"flex\",\n                gap: \"5px\",\n                alignItems: \"center\"\n              }}>\n                <div style={{\n                  position: \"relative\",\n                  width: \"24px\",\n                  height: \"12px\",\n                  border: \"1px solid #000000\",\n                  borderRadius: \"2px\",\n                  display: \"flex\",\n                  alignItems: \"center\"\n                }}>\n                  <div style={{\n                    width: `${batteryProgress * 100}%`,\n                    height: \"8px\",\n                    backgroundColor: batteryProgress > 0.2 ? \"#34C759\" : \"#FF3B30\",\n                    borderRadius: \"1px\",\n                    margin: \"1px\"\n                  }} />\n                </div>\n              </div>\n            </div>\n\n            {frame >= sequences_A8B9C2D3[3].start && (\n              <div style={{\n                position: \"absolute\",\n                top: \"60px\",\n                left: \"20px\",\n                right: \"20px\",\n                height: \"80px\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                transform: `translateY(${searchHeaderY}px)`\n              }}>\n                <div style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"15px\",\n                  backgroundColor: \"#F5F5F5\",\n                  padding: \"12px 16px\",\n                  borderRadius: \"50px\",\n                  flex: 1,\n                  marginRight: \"15px\"\n                }}>\n                  <window.IconifyIcon icon=\"material-symbols:search\" style={{ fontSize: \"20px\", color: \"#666666\" }} />\n                  <div>\n                    <div style={{\n                      fontSize: \"18px\",\n                      fontFamily: \"Inter\",\n                      fontWeight: \"600\",\n                      color: \"#000000\"\n                    }}>\n                      Joshua Tree\n                    </div>\n                    <div style={{\n                      fontSize: \"14px\",\n                      fontFamily: \"Inter\",\n                      fontWeight: \"400\",\n                      color: \"#666666\"\n                    }}>\n                      Dec 11 - 14 • 2 guests\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {frame >= sequences_A8B9C2D3[4].start && (\n              <div style={{\n                position: \"absolute\",\n                top: \"160px\",\n                left: \"20px\",\n                right: \"20px\",\n                height: \"300px\",\n                borderRadius: \"12px\",\n                overflow: \"hidden\",\n                transform: `translateY(${listingImageY}px)`\n              }}>\n                <div style={{\n                  position: \"relative\",\n                  width: \"100%\",\n                  height: \"100%\",\n                  overflow: \"hidden\"\n                }}>\n                  <Img \n                    src={swipeImages[currentImageIndex]}\n                    style={{\n                      position: \"absolute\",\n                      top: 0,\n                      left: 0,\n                      width: \"100%\",\n                      height: \"100%\",\n                      objectFit: \"cover\",\n                      transform: `translateX(${mainImageOffset}%)`\n                    }}\n                  />\n                  \n                  {isInTransition && (\n                    <Img \n                      src={swipeImages[nextImageIndex]}\n                      style={{\n                        position: \"absolute\",\n                        top: 0,\n                        left: 0,\n                        width: \"100%\",\n                        height: \"100%\",\n                        objectFit: \"cover\",\n                        transform: `translateX(${incomingImageOffset}%)`\n                      }}\n                    />\n                  )}\n                </div>\n                \n                {frame >= sequences_A8B9C2D3[5].start && currentImageIndex === 0 && (\n                  <div style={{\n                    position: \"absolute\",\n                    top: \"15px\",\n                    left: \"15px\",\n                    backgroundColor: \"rgba(255,255,255,0.9)\",\n                    padding: \"8px 12px\",\n                    borderRadius: \"20px\",\n                    fontSize: \"14px\",\n                    fontFamily: \"Inter\",\n                    fontWeight: \"500\",\n                    color: \"#000000\",\n                    transform: `scale(${guestFavoriteScale})`\n                  }}>\n                    Guest favorite\n                  </div>\n                )}\n\n                <div style={{\n                  position: \"absolute\",\n                  bottom: \"15px\",\n                  left: \"50%\",\n                  transform: \"translateX(-50%)\",\n                  display: \"flex\",\n                  gap: \"6px\"\n                }}>\n                  {[0,1,2,3].map(i => (\n                    <div key={i} style={{\n                      width: \"6px\",\n                      height: \"6px\",\n                      borderRadius: \"3px\",\n                      backgroundColor: i === currentImageIndex ? \"#FFFFFF\" : \"rgba(255,255,255,0.5)\"\n                    }} />\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {frame >= sequences_A8B9C2D3[6].start && (\n              <div style={{\n                position: \"absolute\",\n                top: \"480px\",\n                left: \"20px\",\n                right: \"20px\",\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"flex-start\",\n                opacity: titleOpacity\n              }}>\n                <div style={{\n                  fontSize: \"18px\",\n                  fontFamily: \"Inter\",\n                  fontWeight: \"600\",\n                  color: \"#000000\"\n                }}>\n                  Home in Yucca Valley\n                </div>\n                <div style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"4px\"\n                }}>\n                  <window.IconifyIcon icon=\"material-symbols:star\" style={{ fontSize: \"14px\", color: \"#FFD700\" }} />\n                  <span style={{\n                    fontSize: \"14px\",\n                    fontFamily: \"Inter\",\n                    fontWeight: \"500\",\n                    color: \"#000000\"\n                  }}>\n                    4.97 (156)\n                  </span>\n                </div>\n              </div>\n            )}\n\n            {frame >= sequences_A8B9C2D3[7].start && (\n              <div style={{\n                position: \"absolute\",\n                top: \"510px\",\n                left: \"20px\",\n                right: \"20px\",\n                opacity: detailsOpacity\n              }}>\n                <div style={{\n                  fontSize: \"16px\",\n                  fontFamily: \"Inter\",\n                  fontWeight: \"400\",\n                  color: \"#666666\",\n                  marginBottom: \"4px\"\n                }}>\n                  Desert dream oasis with spa\n                </div>\n                <div style={{\n                  fontSize: \"16px\",\n                  fontFamily: \"Inter\",\n                  fontWeight: \"400\",\n                  color: \"#666666\"\n                }}>\n                  2 beds\n                </div>\n              </div>\n            )}\n\n            {frame >= sequences_A8B9C2D3[8].start && (\n              <div style={{\n                position: \"absolute\",\n                top: \"560px\",\n                left: \"20px\",\n                transform: `scale(${priceScale})`,\n                transformOrigin: \"left center\"\n              }}>\n                <span style={{\n                  fontSize: \"18px\",\n                  fontFamily: \"Inter\",\n                  fontWeight: \"600\",\n                  color: \"#000000\",\n                  textDecoration: \"underline\"\n                }}>\n                  $782\n                </span>\n                <span style={{\n                  fontSize: \"16px\",\n                  fontFamily: \"Inter\",\n                  fontWeight: \"400\",\n                  color: \"#666666\",\n                  marginLeft: \"4px\"\n                }}>\n                  total before taxes\n                </span>\n              </div>\n            )}\n\n            {frame >= sequences_A8B9C2D3[9].start && (\n              <div style={{\n                position: \"absolute\",\n                top: \"620px\",\n                left: \"20px\",\n                right: \"20px\",\n                height: \"120px\",\n                borderRadius: \"12px\",\n                transform: `translateY(${secondListingY}px)`,\n                overflow: \"hidden\"\n              }}>\n                <Img \n                  src=\"https://images.unsplash.com/photo-1600596542815-ffad4c1539a9?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2075&q=80\"\n                  style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    objectFit: \"cover\"\n                  }}\n                />\n              </div>\n            )}\n\n            {frame >= sequences_A8B9C2D3[10].start && (\n              <div style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                left: \"0px\",\n                right: \"0px\",\n                height: \"80px\",\n                backgroundColor: \"#FFFFFF\",\n                borderTop: \"1px solid #EEEEEE\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"space-around\",\n                transform: `translateY(${bottomNavY}px)`\n              }}>\n                {[\n                  { label: \"Explore\", icon: \"material-symbols:search\", active: true },\n                  { label: \"Wishlists\", icon: \"material-symbols:favorite-outline\", active: false },\n                  { label: \"Trips\", icon: \"material-symbols:home-outline\", active: false },\n                  { label: \"Inbox\", icon: \"material-symbols:chat-outline\", active: false },\n                  { label: \"Profile\", icon: \"material-symbols:person-outline\", active: false }\n                ].map((item, index) => (\n                  <div key={index} style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                    gap: \"4px\"\n                  }}>\n                    <window.IconifyIcon icon={item.icon} style={{ fontSize: \"20px\", color: item.active ? \"#FF5A8A\" : \"#999999\" }} />\n                    <div style={{\n                      fontSize: \"12px\",\n                      fontFamily: \"Inter\",\n                      fontWeight: \"400\",\n                      color: item.active ? \"#FF5A8A\" : \"#999999\"\n                    }}>\n                      {item.label}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n\n          </div>\n        </div>\n      )}\n    </AbsoluteFill>\n  );\n}\n\nexport const durationInFrames_A8B9C2D3 = totalFrames_A8B9C2D3;"}],"meta":{"templateId":"airbnb-demo","dbId":"6282bf4f-c46c-4bc4-8138-790c8b898f56","duration":470,"supportedFormats":["landscape"],"promptVariant":"phrase-1"}}
{"messages":[{"role":"system","content":"You are Bazaar's Remotion code generator. Respond with valid TSX only. Start with imports/const declarations and never add prose."},{"role":"user","content":"Typewriter headline demo in landscape (1920×1080). Leaning into a friendly and product look. Make sure we show headline, accent words, and screenshot card. Use typewriter and card rise for motion. Target duration: 4 seconds (120 frames)."},{"role":"assistant","content":"const { AbsoluteFill, useCurrentFrame, interpolate, useVideoConfig } = window.Remotion;\n\nconst script_mf165pbn = [\n  { text: \"Turn screenshots into demo videos\", frames: 120 }\n];\n\nconst sequences_mf165pbn = [];\nlet accumulatedFrames_mf165pbn = 0;\n\nscript_mf165pbn.forEach((item, index) => {\n  sequences_mf165pbn.push({\n    start: accumulatedFrames_mf165pbn,\n    duration: item.frames,\n    text: item.text\n  });\n  accumulatedFrames_mf165pbn += item.frames;\n});\n\nconst totalFrames_mf165pbn = script_mf165pbn.reduce((sum, s) => sum + s.frames, 0);\nexport const durationInFrames_mf165pbn = totalFrames_mf165pbn;\n\nexport default function TemplateScene() {\n  const frame = useCurrentFrame();\n  const { width, height } = useVideoConfig();\n  \n  const words = [\"Turn\", \"screenshots\", \"into\", \"demo\", \"videos\"];\n  const animationFrames = 8;\n  const framesPerWord = 12;\n  \n  // Screenshot animation timing - starts when \"screenshots\" appears\n  const screenshotWordIndex = 1;\n  const screenshotStartFrame = screenshotWordIndex * framesPerWord;\n  const screenshotAnimationDuration = 60;\n  \n  // Calculate word dimensions for proper sizing\n  const fontSize = Math.min(width * 0.08, 80);\n  const approximateWordWidth = fontSize * 6; // Approximate width for \"screenshots\"\n  const approximateWordHeight = fontSize;\n  \n  return (\n    <AbsoluteFill\n      style={{\n        backgroundColor: \"white\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        gap: \"20px\",\n        flexWrap: \"wrap\",\n        padding: \"40px\"\n      }}\n    >\n      {words.map((word, index) => {\n        const startFrame = index * framesPerWord;\n        const endFrame = startFrame + animationFrames;\n        \n        const opacity = interpolate(\n          frame,\n          [startFrame, endFrame],\n          [0, 1],\n          {\n            extrapolateLeft: \"clamp\",\n            extrapolateRight: \"clamp\"\n          }\n        );\n        \n        const translateY = interpolate(\n          frame,\n          [startFrame, endFrame],\n          [30, 0],\n          {\n            extrapolateLeft: \"clamp\",\n            extrapolateRight: \"clamp\"\n          }\n        );\n        \n        const isScreenshotWord = word === \"screenshots\";\n        \n        return (\n          <div\n            key={index}\n            style={{\n              position: \"relative\",\n              fontSize: fontSize + \"px\",\n              fontFamily: \"Inter\",\n              fontWeight: \"700\",\n              color: \"#1a1a1a\",\n              opacity: opacity,\n              transform: `translateY(${translateY}px)`,\n            }}\n          >\n            {word}\n            \n            {/* Screenshot animation overlay */}\n            {isScreenshotWord && frame >= screenshotStartFrame && (\n              <>\n                {/* Selection highlight effect - lowered by 15px */}\n                <div\n                  style={{\n                    position: \"absolute\",\n                    top: \"0px\",\n                    left: \"-15px\",\n                    width: interpolate(\n                      frame,\n                      [screenshotStartFrame + 10, screenshotStartFrame + 40],\n                      [0, approximateWordWidth + 30],\n                      { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n                    ) + \"px\",\n                    height: interpolate(\n                      frame,\n                      [screenshotStartFrame + 10, screenshotStartFrame + 40],\n                      [0, approximateWordHeight + 30],\n                      { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n                    ) + \"px\",\n                    backgroundColor: \"rgba(0, 123, 255, 0.1)\",\n                    borderRadius: \"4px\",\n                    opacity: interpolate(\n                      frame,\n                      [screenshotStartFrame + 45, screenshotStartFrame + 55],\n                      [0, 1],\n                      { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n                    )\n                  }}\n                />\n                \n                {/* Animated dashed border rectangle - lowered by 15px */}\n                <div\n                  style={{\n                    position: \"absolute\",\n                    top: \"0px\",\n                    left: \"-15px\",\n                    width: interpolate(\n                      frame,\n                      [screenshotStartFrame + 10, screenshotStartFrame + 40],\n                      [0, approximateWordWidth + 30],\n                      { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n                    ) + \"px\",\n                    height: interpolate(\n                      frame,\n                      [screenshotStartFrame + 10, screenshotStartFrame + 40],\n                      [0, approximateWordHeight + 30],\n                      { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n                    ) + \"px\",\n                    border: \"2px dashed #666\",\n                    borderRadius: \"4px\",\n                    opacity: interpolate(\n                      frame,\n                      [screenshotStartFrame + 10, screenshotStartFrame + 20],\n                      [0, 1],\n                      { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n                    )\n                  }}\n                />\n                \n                {/* Animated cursor - positioned at bottom-right of dashed box, lowered by 15px */}\n                <div\n                  style={{\n                    position: \"absolute\",\n                    width: \"20px\",\n                    height: \"20px\",\n                    top: interpolate(\n                      frame,\n                      [screenshotStartFrame + 10, screenshotStartFrame + 40],\n                      [-10, approximateWordHeight + 30 - 10], // Lowered by 15px\n                      { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n                    ) + \"px\",\n                    left: interpolate(\n                      frame,\n                      [screenshotStartFrame + 10, screenshotStartFrame + 40],\n                      [-25, approximateWordWidth + 15 - 10], // Right of dashed box minus cursor width/2\n                      { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n                    ) + \"px\",\n                    opacity: interpolate(\n                      frame,\n                      [screenshotStartFrame + 5, screenshotStartFrame + 15],\n                      [0, 1],\n                      { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n                    ),\n                    zIndex: 10\n                  }}\n                >\n                  {/* Plus cursor */}\n                  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\">\n                    <path\n                      d=\"M10 2v16M2 10h16\"\n                      stroke=\"#333\"\n                      strokeWidth=\"2\"\n                      strokeLinecap=\"round\"\n                    />\n                  </svg>\n                </div>\n                \n                {/* Corner handles - lowered by 15px to match new position */}\n                {[\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"].map((corner) => {\n                  const isTopLeft = corner === \"top-left\";\n                  const isTopRight = corner === \"top-right\";\n                  const isBottomLeft = corner === \"bottom-left\";\n                  const isBottomRight = corner === \"bottom-right\";\n                  \n                  const finalWidth = approximateWordWidth + 30;\n                  const finalHeight = approximateWordHeight + 30;\n                  \n                  return (\n                    <div\n                      key={corner}\n                      style={{\n                        position: \"absolute\",\n                        width: \"8px\",\n                        height: \"8px\",\n                        backgroundColor: \"white\",\n                        border: \"2px solid #666\",\n                        borderRadius: \"50%\",\n                        top: isTopLeft || isTopRight ? \"-4px\" : (finalHeight - 4) + \"px\", // Lowered by 15px\n                        left: isTopLeft || isBottomLeft ? \"-19px\" : (finalWidth - 19) + \"px\",\n                        opacity: interpolate(\n                          frame,\n                          [screenshotStartFrame + 40, screenshotStartFrame + 50],\n                          [0, 1],\n                          { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n                        )\n                      }}\n                    />\n                  );\n                })}\n              </>\n            )}\n          </div>\n        );\n      })}\n    </AbsoluteFill>\n  );\n}"}],"meta":{"templateId":"screenshot-intro","dbId":"009b717a-dd89-4757-8321-bf06b391c7ad","duration":120,"supportedFormats":["landscape"],"promptVariant":"phrase-2"}}
{"messages":[{"role":"system","content":"You are Bazaar's Remotion code generator. Respond with valid TSX only. Start with imports/const declarations and never add prose."},{"role":"user","content":"Travel marketplace animation in landscape (1920×1080). Leaning into a friendly and lifestyle look. Make sure we show hero image, property cards, and ratings. Use fade and parallax for motion. Target duration: 15.7 seconds (470 frames)."},{"role":"assistant","content":"const { AbsoluteFill, useCurrentFrame, useVideoConfig, interpolate, Img } = window.Remotion;\n\nconst script_A8B9C2D3 = [\n  { type: 'splash_bg', frames: 15 },\n  { type: 'logo_and_tagline', frames: 15 },\n  { type: 'transition', frames: 10 },\n  { type: 'search_header', frames: 12 },\n  { type: 'listing_image', frames: 15 },\n  { type: 'guest_favorite', frames: 10 },\n  { type: 'property_title', frames: 12 },\n  { type: 'property_details', frames: 12 },\n  { type: 'price', frames: 12 },\n  { type: 'second_listing', frames: 15 },\n  { type: 'bottom_nav', frames: 12 },\n  { type: 'swipe_interaction', frames: 150 },\n  { type: 'status_bar_animations', frames: 180 }\n];\n\nconst swipeImages = [\n  \"https://images.unsplash.com/photo-1564013799919-ab600027ffc6?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80\",\n  \"https://images.unsplash.com/photo-1613977257363-707ba9348227?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80\",\n  \"https://images.unsplash.com/photo-1600607687939-ce8a6c25118c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2053&q=80\",\n  \"https://images.unsplash.com/photo-1600566753190-17f0baa2a6c3?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80\"\n];\n\nlet accumulatedFrames_A8B9C2D3 = 0;\nconst sequences_A8B9C2D3 = [];\n\nscript_A8B9C2D3.forEach((item, index) => {\n  sequences_A8B9C2D3.push({\n    ...item,\n    start: accumulatedFrames_A8B9C2D3,\n    end: accumulatedFrames_A8B9C2D3 + item.frames\n  });\n  accumulatedFrames_A8B9C2D3 += item.frames;\n});\n\nconst totalFrames_A8B9C2D3 = script_A8B9C2D3.reduce((sum, item) => sum + item.frames, 0);\n\nexport default function AirbnbApp_me45p5l9() {\n  window.RemotionGoogleFonts.loadFont(\"Inter\", { weights: [\"400\", \"500\", \"600\"] });\n  \n  const frame = useCurrentFrame();\n  const { fps, width, height } = useVideoConfig();\n\n  const logoAndTaglineScale = interpolate(\n    frame,\n    [0, 15],\n    [0, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const searchHeaderY = interpolate(\n    frame,\n    [sequences_A8B9C2D3[3].start, sequences_A8B9C2D3[3].start + 10],\n    [50, 0],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const listingImageY = interpolate(\n    frame,\n    [sequences_A8B9C2D3[4].start, sequences_A8B9C2D3[4].start + 12],\n    [100, 0],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const guestFavoriteScale = interpolate(\n    frame,\n    [sequences_A8B9C2D3[5].start, sequences_A8B9C2D3[5].start + 8],\n    [0, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const titleOpacity = interpolate(\n    frame,\n    [sequences_A8B9C2D3[6].start, sequences_A8B9C2D3[6].start + 10],\n    [0, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const detailsOpacity = interpolate(\n    frame,\n    [sequences_A8B9C2D3[7].start, sequences_A8B9C2D3[7].start + 10],\n    [0, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const priceScale = interpolate(\n    frame,\n    [sequences_A8B9C2D3[8].start, sequences_A8B9C2D3[8].start + 10],\n    [0.8, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const secondListingY = interpolate(\n    frame,\n    [sequences_A8B9C2D3[9].start, sequences_A8B9C2D3[9].start + 12],\n    [150, 0],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const bottomNavY = interpolate(\n    frame,\n    [sequences_A8B9C2D3[10].start, sequences_A8B9C2D3[10].start + 10],\n    [80, 0],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const swipeStartFrame = sequences_A8B9C2D3[11].start;\n  const totalSwipeProgress = interpolate(\n    frame,\n    [swipeStartFrame, swipeStartFrame + 150],\n    [0, 3],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n  \n  const currentSwipeIndex = Math.floor(totalSwipeProgress);\n  const swipeLocalProgress = totalSwipeProgress % 1;\n  \n  const swipeEasing = interpolate(\n    frame - (swipeStartFrame + currentSwipeIndex * 50),\n    [0, 50],\n    [0, 1],\n    { \n      extrapolateLeft: \"clamp\", \n      extrapolateRight: \"clamp\",\n      easing: (t) => t * t * (3 - 2 * t)\n    }\n  );\n  \n  const isInTransition = swipeLocalProgress > 0 && swipeLocalProgress < 1;\n  const easedProgress = isInTransition ? swipeEasing : (swipeLocalProgress >= 1 ? 1 : 0);\n  \n  const mainImageOffset = interpolate(\n    easedProgress,\n    [0, 1],\n    [0, -100],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n  \n  const parallaxDelay = 0.1;\n  const incomingImageProgress = interpolate(\n    easedProgress,\n    [0, parallaxDelay, 1],\n    [0, 0, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n  \n  const incomingImageOffset = interpolate(\n    incomingImageProgress,\n    [0, 1],\n    [100, 0],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n  \n  const currentImageIndex = currentSwipeIndex % 4;\n  const nextImageIndex = (currentSwipeIndex + 1) % 4;\n\n  const statusBarAnimationStart = sequences_A8B9C2D3[12].start;\n  const timeProgress = interpolate(\n    frame,\n    [statusBarAnimationStart, statusBarAnimationStart + 60],\n    [0, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n  \n  const times = [\"9:41\", \"9:42\", \"9:43\", \"9:44\"];\n  const currentTimeIndex = Math.floor(timeProgress * 3);\n  const currentTime = times[Math.min(currentTimeIndex, 3)];\n  \n  const batteryProgress = interpolate(\n    frame,\n    [statusBarAnimationStart, statusBarAnimationStart + 180],\n    [1, 0.85],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const phoneWidth = Math.min(width, height * 0.46);\n  const phoneHeight = phoneWidth * 2.16;\n  const phoneScaleFactor = Math.min(width / 375, height / 812);\n\n  // Format detection for responsive sizing\n  const aspectRatio = width / height;\n  const isPortrait = aspectRatio < 1;\n  const isSquare = Math.abs(aspectRatio - 1) < 0.2;\n  \n  // Responsive logo sizing based on format\n  const logoSize = isPortrait ? width * 0.15 : isSquare ? width * 0.18 : width * 0.12;\n\n  return (\n    <AbsoluteFill style={{ backgroundColor: \"#FF385C\", borderRadius: \"20px\" }}>\n      {frame >= 0 && frame < sequences_A8B9C2D3[2].end && (\n        <div style={{\n          position: \"absolute\",\n          top: \"40%\",\n          left: \"50%\",\n          transform: `translate(-50%, -50%) scale(${logoAndTaglineScale})`,\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          width: \"80%\"\n        }}>\n          <window.IconifyIcon \n            icon=\"simple-icons:airbnb\" \n            style={{\n              fontSize: `${logoSize}px`,\n              color: \"white\"\n            }}\n          />\n        </div>\n      )}\n\n      {frame >= 0 && frame < sequences_A8B9C2D3[2].end && (\n        <div style={{\n          position: \"absolute\",\n          top: \"60%\",\n          left: \"50%\",\n          transform: `translate(-50%, -50%) scale(${logoAndTaglineScale})`,\n          color: \"white\",\n          fontSize: `${width * 0.08}px`,\n          fontFamily: \"Inter\",\n          fontWeight: \"400\",\n          width: \"80%\",\n          textAlign: \"center\"\n        }}>\n          Belong Anywhere\n        </div>\n      )}\n\n      {frame >= sequences_A8B9C2D3[2].end && (\n        <div style={{\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: `translate(-50%, -50%) scale(${phoneScaleFactor})`,\n          width: \"375px\",\n          height: \"812px\",\n          backgroundColor: \"#000000\",\n          borderRadius: \"40px\",\n          padding: \"8px\"\n        }}>\n          <div style={{\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"#FFFFFF\",\n            borderRadius: \"32px\",\n            overflow: \"hidden\",\n            position: \"relative\"\n          }}>\n            \n            <div style={{\n              position: \"absolute\",\n              top: \"0px\",\n              left: \"0px\",\n              right: \"0px\",\n              height: \"60px\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              paddingLeft: \"20px\",\n              paddingRight: \"20px\",\n              zIndex: 10\n            }}>\n              <div style={{\n                fontSize: \"16px\",\n                fontFamily: \"Inter\",\n                fontWeight: \"600\",\n                color: \"#000000\"\n              }}>\n                {frame >= statusBarAnimationStart ? currentTime : \"9:41\"}\n              </div>\n              <div style={{\n                width: \"120px\",\n                height: \"30px\",\n                backgroundColor: \"#000000\",\n                borderRadius: \"15px\"\n              }} />\n              <div style={{\n                display: \"flex\",\n                gap: \"5px\",\n                alignItems: \"center\"\n              }}>\n                <div style={{\n                  position: \"relative\",\n                  width: \"24px\",\n                  height: \"12px\",\n                  border: \"1px solid #000000\",\n                  borderRadius: \"2px\",\n                  display: \"flex\",\n                  alignItems: \"center\"\n                }}>\n                  <div style={{\n                    width: `${batteryProgress * 100}%`,\n                    height: \"8px\",\n                    backgroundColor: batteryProgress > 0.2 ? \"#34C759\" : \"#FF3B30\",\n                    borderRadius: \"1px\",\n                    margin: \"1px\"\n                  }} />\n                </div>\n              </div>\n            </div>\n\n            {frame >= sequences_A8B9C2D3[3].start && (\n              <div style={{\n                position: \"absolute\",\n                top: \"60px\",\n                left: \"20px\",\n                right: \"20px\",\n                height: \"80px\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                transform: `translateY(${searchHeaderY}px)`\n              }}>\n                <div style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"15px\",\n                  backgroundColor: \"#F5F5F5\",\n                  padding: \"12px 16px\",\n                  borderRadius: \"50px\",\n                  flex: 1,\n                  marginRight: \"15px\"\n                }}>\n                  <window.IconifyIcon icon=\"material-symbols:search\" style={{ fontSize: \"20px\", color: \"#666666\" }} />\n                  <div>\n                    <div style={{\n                      fontSize: \"18px\",\n                      fontFamily: \"Inter\",\n                      fontWeight: \"600\",\n                      color: \"#000000\"\n                    }}>\n                      Joshua Tree\n                    </div>\n                    <div style={{\n                      fontSize: \"14px\",\n                      fontFamily: \"Inter\",\n                      fontWeight: \"400\",\n                      color: \"#666666\"\n                    }}>\n                      Dec 11 - 14 • 2 guests\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {frame >= sequences_A8B9C2D3[4].start && (\n              <div style={{\n                position: \"absolute\",\n                top: \"160px\",\n                left: \"20px\",\n                right: \"20px\",\n                height: \"300px\",\n                borderRadius: \"12px\",\n                overflow: \"hidden\",\n                transform: `translateY(${listingImageY}px)`\n              }}>\n                <div style={{\n                  position: \"relative\",\n                  width: \"100%\",\n                  height: \"100%\",\n                  overflow: \"hidden\"\n                }}>\n                  <Img \n                    src={swipeImages[currentImageIndex]}\n                    style={{\n                      position: \"absolute\",\n                      top: 0,\n                      left: 0,\n                      width: \"100%\",\n                      height: \"100%\",\n                      objectFit: \"cover\",\n                      transform: `translateX(${mainImageOffset}%)`\n                    }}\n                  />\n                  \n                  {isInTransition && (\n                    <Img \n                      src={swipeImages[nextImageIndex]}\n                      style={{\n                        position: \"absolute\",\n                        top: 0,\n                        left: 0,\n                        width: \"100%\",\n                        height: \"100%\",\n                        objectFit: \"cover\",\n                        transform: `translateX(${incomingImageOffset}%)`\n                      }}\n                    />\n                  )}\n                </div>\n                \n                {frame >= sequences_A8B9C2D3[5].start && currentImageIndex === 0 && (\n                  <div style={{\n                    position: \"absolute\",\n                    top: \"15px\",\n                    left: \"15px\",\n                    backgroundColor: \"rgba(255,255,255,0.9)\",\n                    padding: \"8px 12px\",\n                    borderRadius: \"20px\",\n                    fontSize: \"14px\",\n                    fontFamily: \"Inter\",\n                    fontWeight: \"500\",\n                    color: \"#000000\",\n                    transform: `scale(${guestFavoriteScale})`\n                  }}>\n                    Guest favorite\n                  </div>\n                )}\n\n                <div style={{\n                  position: \"absolute\",\n                  bottom: \"15px\",\n                  left: \"50%\",\n                  transform: \"translateX(-50%)\",\n                  display: \"flex\",\n                  gap: \"6px\"\n                }}>\n                  {[0,1,2,3].map(i => (\n                    <div key={i} style={{\n                      width: \"6px\",\n                      height: \"6px\",\n                      borderRadius: \"3px\",\n                      backgroundColor: i === currentImageIndex ? \"#FFFFFF\" : \"rgba(255,255,255,0.5)\"\n                    }} />\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {frame >= sequences_A8B9C2D3[6].start && (\n              <div style={{\n                position: \"absolute\",\n                top: \"480px\",\n                left: \"20px\",\n                right: \"20px\",\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"flex-start\",\n                opacity: titleOpacity\n              }}>\n                <div style={{\n                  fontSize: \"18px\",\n                  fontFamily: \"Inter\",\n                  fontWeight: \"600\",\n                  color: \"#000000\"\n                }}>\n                  Home in Yucca Valley\n                </div>\n                <div style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"4px\"\n                }}>\n                  <window.IconifyIcon icon=\"material-symbols:star\" style={{ fontSize: \"14px\", color: \"#FFD700\" }} />\n                  <span style={{\n                    fontSize: \"14px\",\n                    fontFamily: \"Inter\",\n                    fontWeight: \"500\",\n                    color: \"#000000\"\n                  }}>\n                    4.97 (156)\n                  </span>\n                </div>\n              </div>\n            )}\n\n            {frame >= sequences_A8B9C2D3[7].start && (\n              <div style={{\n                position: \"absolute\",\n                top: \"510px\",\n                left: \"20px\",\n                right: \"20px\",\n                opacity: detailsOpacity\n              }}>\n                <div style={{\n                  fontSize: \"16px\",\n                  fontFamily: \"Inter\",\n                  fontWeight: \"400\",\n                  color: \"#666666\",\n                  marginBottom: \"4px\"\n                }}>\n                  Desert dream oasis with spa\n                </div>\n                <div style={{\n                  fontSize: \"16px\",\n                  fontFamily: \"Inter\",\n                  fontWeight: \"400\",\n                  color: \"#666666\"\n                }}>\n                  2 beds\n                </div>\n              </div>\n            )}\n\n            {frame >= sequences_A8B9C2D3[8].start && (\n              <div style={{\n                position: \"absolute\",\n                top: \"560px\",\n                left: \"20px\",\n                transform: `scale(${priceScale})`,\n                transformOrigin: \"left center\"\n              }}>\n                <span style={{\n                  fontSize: \"18px\",\n                  fontFamily: \"Inter\",\n                  fontWeight: \"600\",\n                  color: \"#000000\",\n                  textDecoration: \"underline\"\n                }}>\n                  $782\n                </span>\n                <span style={{\n                  fontSize: \"16px\",\n                  fontFamily: \"Inter\",\n                  fontWeight: \"400\",\n                  color: \"#666666\",\n                  marginLeft: \"4px\"\n                }}>\n                  total before taxes\n                </span>\n              </div>\n            )}\n\n            {frame >= sequences_A8B9C2D3[9].start && (\n              <div style={{\n                position: \"absolute\",\n                top: \"620px\",\n                left: \"20px\",\n                right: \"20px\",\n                height: \"120px\",\n                borderRadius: \"12px\",\n                transform: `translateY(${secondListingY}px)`,\n                overflow: \"hidden\"\n              }}>\n                <Img \n                  src=\"https://images.unsplash.com/photo-1600596542815-ffad4c1539a9?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2075&q=80\"\n                  style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    objectFit: \"cover\"\n                  }}\n                />\n              </div>\n            )}\n\n            {frame >= sequences_A8B9C2D3[10].start && (\n              <div style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                left: \"0px\",\n                right: \"0px\",\n                height: \"80px\",\n                backgroundColor: \"#FFFFFF\",\n                borderTop: \"1px solid #EEEEEE\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"space-around\",\n                transform: `translateY(${bottomNavY}px)`\n              }}>\n                {[\n                  { label: \"Explore\", icon: \"material-symbols:search\", active: true },\n                  { label: \"Wishlists\", icon: \"material-symbols:favorite-outline\", active: false },\n                  { label: \"Trips\", icon: \"material-symbols:home-outline\", active: false },\n                  { label: \"Inbox\", icon: \"material-symbols:chat-outline\", active: false },\n                  { label: \"Profile\", icon: \"material-symbols:person-outline\", active: false }\n                ].map((item, index) => (\n                  <div key={index} style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                    gap: \"4px\"\n                  }}>\n                    <window.IconifyIcon icon={item.icon} style={{ fontSize: \"20px\", color: item.active ? \"#FF5A8A\" : \"#999999\" }} />\n                    <div style={{\n                      fontSize: \"12px\",\n                      fontFamily: \"Inter\",\n                      fontWeight: \"400\",\n                      color: item.active ? \"#FF5A8A\" : \"#999999\"\n                    }}>\n                      {item.label}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n\n          </div>\n        </div>\n      )}\n    </AbsoluteFill>\n  );\n}\n\nexport const durationInFrames_A8B9C2D3 = totalFrames_A8B9C2D3;"}],"meta":{"templateId":"airbnb-demo","dbId":"6282bf4f-c46c-4bc4-8138-790c8b898f56","duration":470,"supportedFormats":["landscape"],"promptVariant":"phrase-2"}}
{"messages":[{"role":"system","content":"You are Bazaar's Remotion code generator. Respond with valid TSX only. Start with imports/const declarations and never add prose."},{"role":"user","content":"Kinetic hero with ui in landscape (1920×1080). Leaning into a energetic and tech look. Make sure we show headline text, ui mockup, and cursor. Use text typing and background zoom for motion. Target duration: 7.3 seconds (220 frames)."},{"role":"assistant","content":"const { AbsoluteFill, Sequence, interpolate, useCurrentFrame, useVideoConfig, Img } = window.Remotion;\n\nconst script_meh0uew7 = [\n  { type: \"typing-text\", frames: 60 },\n  { type: \"delay\", frames: 5 },\n  { type: \"outro\", frames: 15 },\n  { type: \"ui-slide\", frames: 20 },\n  { type: \"new-text\", frames: 60 },\n  { type: \"ui-transform\", frames: 60 },\n  { type: \"background-transition\", frames: 5 }\n];\n\nconst sequences_meh0uew7 = [];\nlet accumulatedFrames_meh0uew7 = 0;\n\nscript_meh0uew7.forEach((item, index) => {\n  sequences_meh0uew7.push({\n    ...item,\n    start: accumulatedFrames_meh0uew7,\n    end: accumulatedFrames_meh0uew7 + item.frames\n  });\n  accumulatedFrames_meh0uew7 += item.frames;\n});\n\nconst totalFrames_meh0uew7 = script_meh0uew7.reduce((sum, item) => sum + item.frames, 0);\nexport const durationInFrames_meh0uew7 = totalFrames_meh0uew7;\n\nexport default function TemplateScene() {\n  window.RemotionGoogleFonts.loadFont(\"Poppins\", { weights: [\"500\", \"600\", \"800\"] });\n\n  const frame = useCurrentFrame();\n  const { width, height } = useVideoConfig();\n\n  // Background zoom out and rotation animation\n  const backgroundScale = interpolate(\n    frame,\n    [0, 90],\n    [3, 2],\n    {\n      extrapolateLeft: \"clamp\",\n      extrapolateRight: \"clamp\"\n    }\n  );\n\n  const backgroundRotation = interpolate(\n    frame,\n    [0, 150, 210],\n    [0, 180, 360],\n    {\n      extrapolateLeft: \"clamp\",\n      extrapolateRight: \"clamp\"\n    }\n  );\n\n  // Background fade transition (last 5 frames: 215-220)\n  const oldBackgroundOpacity = interpolate(\n    frame,\n    [210, 220],\n    [1, 0],\n    {\n      extrapolateLeft: \"clamp\",\n      extrapolateRight: \"clamp\"\n    }\n  );\n\n  const newBackgroundOpacity = interpolate(\n    frame,\n    [210, 220],\n    [0, 1],\n    {\n      extrapolateLeft: \"clamp\",\n      extrapolateRight: \"clamp\"\n    }\n  );\n\n  // Text entrance animation (frames 0-30) and outro upward movement (frames 65-80) - SLOWER\n  const textY = interpolate(\n    frame,\n    [0, 30, 65, 80],\n    [height * 0.55, height * 0.5, height * 0.5, height * 0.2],\n    {\n      extrapolateLeft: \"clamp\",\n      extrapolateRight: \"clamp\"\n    }\n  );\n\n  const textOpacity = interpolate(\n    frame,\n    [0, 30, 65, 80],\n    [0, 1, 1, 0],\n    {\n      extrapolateLeft: \"clamp\",\n      extrapolateRight: \"clamp\"\n    }\n  );\n\n  // Text entrance scale (frames 0-20)\n  const entranceScale = interpolate(\n    frame,\n    [0, 20],\n    [1.3, 1],\n    {\n      extrapolateLeft: \"clamp\",\n      extrapolateRight: \"clamp\"\n    }\n  );\n\n  // Text outro scale - zoom out (frames 65-80) - SLOWER\n  const outroScale = interpolate(\n    frame,\n    [65, 80],\n    [1, 0.3],\n    {\n      extrapolateLeft: \"clamp\",\n      extrapolateRight: \"clamp\"\n    }\n  );\n\n  // Combine entrance and outro scales\n  const textScale = frame < 65 ? entranceScale : outroScale;\n\n  // UI Image slide in animation (starts at frame 65, earlier timing)\n  const uiImageY = interpolate(\n    frame,\n    [65, 85, 145, 205],\n    [height + 100, height * 0.6, height * 0.5, height * 0.1],\n    {\n      extrapolateLeft: \"clamp\",\n      extrapolateRight: \"clamp\"\n    }\n  );\n\n  const uiImageOpacity = interpolate(\n    frame,\n    [65, 80],\n    [0, 1],\n    {\n      extrapolateLeft: \"clamp\",\n      extrapolateRight: \"clamp\"\n    }\n  );\n\n  // UI Image scale animation - starts large and scales down while sliding in, then scales up to screen after delay, then scales up more in final 2 seconds\n  const uiImageScale = interpolate(\n    frame,\n    [65, 85, 110, 120, 145, 205, 210],\n    [1.5, 1, 1, 2.2, 2.2, 3.5, 0],\n    {\n      extrapolateLeft: \"clamp\",\n      extrapolateRight: \"clamp\"\n    }\n  );\n\n  // UI Image perspective Y rotation to right side - EXTENDED: Now covers entire animation duration including new 2 seconds\n  const uiImageRotateY = interpolate(\n    frame,\n    [85, 145, 205, 210],\n    [0, 15, 35, 45],\n    {\n      extrapolateLeft: \"clamp\",\n      extrapolateRight: \"clamp\"\n    }\n  );\n\n  // New text animation (starts at frame 65, now disappears later at frame 105-110 to give more time)\n  const newTextY = interpolate(\n    frame,\n    [65, 110],\n    [height * 0.22, height * 0.20],\n    {\n      extrapolateLeft: \"clamp\",\n      extrapolateRight: \"clamp\"\n    }\n  );\n\n  const newTextOpacity = interpolate(\n    frame,\n    [65, 85, 115, 120],\n    [0, 1, 1, 0],\n    {\n      extrapolateLeft: \"clamp\",\n      extrapolateRight: \"clamp\"\n    }\n  );\n\n  const newTextScale = interpolate(\n    frame,\n    [65, 85],\n    [1.3, 1],\n    {\n      extrapolateLeft: \"clamp\",\n      extrapolateRight: \"clamp\"\n    }\n  );\n\n  // Mouse cursor animation - appears in last 2 seconds (frames 145-205)\n  const mouseX = interpolate(\n    frame,\n    [145, 185],\n    [width + 50, width * 0.30],\n    {\n      extrapolateLeft: \"clamp\",\n      extrapolateRight: \"clamp\"\n    }\n  );\n\n  const mouseY = interpolate(\n    frame,\n    [145, 185],\n    [height * 0.5, height * 0.93],\n    {\n      extrapolateLeft: \"clamp\",\n      extrapolateRight: \"clamp\"\n    }\n  );\n\n  const mouseOpacity = interpolate(\n    frame,\n    [145, 155, 195, 215],\n    [0, 1, 1, 1],\n    {\n      extrapolateLeft: \"clamp\",\n      extrapolateRight: \"clamp\"\n    }\n  );\n\n  // Enhanced click animation - scale down first, then scale up for more dramatic click effect\n  const clickScale = interpolate(\n    frame,\n    [190, 202, 203, 208],\n    [1.2, 0.8, 1.5, 1.2], // Increased size overall, scale down then up\n    {\n      extrapolateLeft: \"clamp\",\n      extrapolateRight: \"clamp\"\n    }\n  );\n\n  return (\n    <AbsoluteFill style= {{ backgroundColor: \"#1e40af\" }\n}>\n  {/* Old background image with zoom out and rotation - fades out in last 5 frames */ }\n  < Img\nsrc = \"https://i.postimg.cc/Wz519hX2/Untitled-1kjn.png\"\nstyle = {{\n  position: \"absolute\",\n    top: \"50%\",\n      left: \"50%\",\n        width: width * 1.2,\n          height: height * 1.2,\n            objectFit: \"cover\",\n              transform: `translate(-50%, -50%) scale(${backgroundScale}) rotate(${backgroundRotation}deg)`,\n                transformOrigin: \"center center\",\n                  opacity: oldBackgroundOpacity\n}}\n/>\n\n{/* New background image - fades in during last 5 frames with initial scale of 2 */ }\n{\n  frame >= 215 && (\n    <Img\nsrc=\"https://i.postimg.cc/XvQGvww9/Untitled-1kjn.png\"\n  style = {{\n    position: \"absolute\",\n      top: \"50%\",\n        left: \"50%\",\n          width: width * 1.2,\n            height: height * 1.2,\n              objectFit: \"cover\",\n                transform: `translate(-50%, -50%) scale(2)`,\n                  transformOrigin: \"center center\",\n                    opacity: newBackgroundOpacity\n  }\n}\n/>\n)}\n\n{/* Text with entrance and outro animations */ }\n{\n  frame >= 0 && frame <= 80 && (\n    <div style={\n      {\n        position: \"absolute\",\n          top: textY,\n            left: \"50%\",\n              transform: `translate(-50%, -50%) scale(${textScale})`,\n                fontFamily: \"Poppins\",\n                  fontSize: \"6vw\",\n                    fontWeight: \"800\",\n                      textAlign: \"center\",\n                        lineHeight: \"1.2\",\n                          letterSpacing: \"0.05em\",\n                            color: \"white\",\n                              width: \"100%\",\n                                opacity: textOpacity,\n                                  textShadow: \"2px 2px 4px rgba(0,0,0,0.8)\",\n}\n  }>\n    Your Secure < br /> AI Meeting Assistant\n      < /div>\n)\n}\n\n{/* UI Image with slide in animation, scale down animation, border gradient, glow, and perspective depth + Y rotation */ }\n{\n  frame >= 65 && (\n    <div style={\n      {\n        position: \"absolute\",\n          top: uiImageY,\n            left: \"50%\",\n              transform: `translate(-50%, -50%) scale(${uiImageScale}) perspective(1000px) rotateX(15deg) rotateY(${uiImageRotateY}deg)`,\n                opacity: uiImageOpacity,\n                  padding: \"4px\",\n                    background: \"linear-gradient(135deg, #667eea 0%, #764ba2 100%)\",\n                      borderRadius: \"16px\",\n                        boxShadow: \"0 0 40px rgba(102, 126, 234, 0.6), 0 0 80px rgba(118, 75, 162, 0.4), 0 20px 40px rgba(0,0,0,0.3)\",\n}\n  }>\n    <Img\nsrc=\"https://i.postimg.cc/WzNzVQ3b/a-LRGZ7s0-Y16-Icja-J88v-XIa3dc.png\"\n  style = {{\n    width: width * 0.7,\n      height: \"auto\",\n        borderRadius: \"12px\",\n          display: \"block\"\n  }\n}\n/>\n  < /div>\n)}\n\n{/* New text after UI image appears (now disappears later to give more time on screen) */ }\n{\n  frame >= 65 && frame <= 110 && (\n    <div style={\n      {\n        position: \"absolute\",\n          top: newTextY,\n            left: \"50%\",\n              transform: `translate(-50%, -50%) scale(${newTextScale})`,\n                fontFamily: \"Poppins\",\n                  fontSize: \"4vw\",\n                    fontWeight: \"600\",\n                      textAlign: \"center\",\n                        color: \"white\",\n                          width: \"100%\",\n                            opacity: newTextOpacity,\n                              textShadow: \"2px 2px 4px rgba(0,0,0,0.8)\",\n}\n  }>\n    Record, transcribe, and summarize meetings\n      < /div>\n)\n}\n\n{/* Mouse cursor animation - appears in last 2 seconds with enhanced click effect */ }\n{\n  frame >= 145 && (\n    <div style={\n      {\n        position: \"absolute\",\n          left: mouseX,\n            top: mouseY,\n              transform: `translate(-50%, -50%) scale(${clickScale})`,\n                opacity: mouseOpacity,\n                  pointerEvents: \"none\",\n                    zIndex: 1000\n      }\n  }>\n    {/* Mouse cursor using lsicon😛ointer-filled icon - solid white */ }\n    < window.IconifyIcon\n  icon = \"lsicon😛ointer-filled\"\n  style = {{\n    fontSize: \"60px\",\n      color: \"#7d5beb\",\n        filter: \"drop-shadow(3px 3px 8px rgba(0,0,0,0.6)) drop-shadow(0px 0px 4px rgba(30,58,138,0.4))\"\n  }\n}\n/>\n\n{/* Click ripple effect */ }\n{\n  frame >= 190 && frame <= 200 && (\n    <div style={\n      {\n        position: \"absolute\",\n          top: \"50%\",\n            left: \"50%\",\n              width: \"80px\",\n                height: \"80px\",\n                  borderRadius: \"50%\",\n                    border: \"2px solid rgba(255,255,255,0.8)\",\n                      transform: `translate(-50%, -50%) scale(${interpolate(frame, [200, 210], [0.5, 2])})`,\n                        opacity: interpolate(frame, [200, 210], [1, 0])\n      }\n  } />\n)\n}\n</div>\n)}\n</AbsoluteFill>\n);\n}"}],"meta":{"templateId":"text-ui-animation-db","dbId":"7acf1a10-e0c1-485c-bf15-d8a32ab9bf82","duration":220,"supportedFormats":["landscape"],"promptVariant":"phrase-2"}}
{"messages":[{"role":"system","content":"You are Bazaar's Remotion code generator. Respond with valid TSX only. Start with imports/const declarations and never add prose."},{"role":"user","content":"Portrait dashboard animation in portrait (1080×1920). Leaning into a modern and product look. Make sure we show profile avatar, revenue card, and mini chart. Use scale and slide for motion. Target duration: 2 seconds (60 frames)."},{"role":"assistant","content":"const { AbsoluteFill, Sequence, interpolate, useCurrentFrame, useVideoConfig, Img } = window.Remotion;\n\nconst script_A8B9C2D1 = [\n  { type: \"simultaneous_animation\", frames: 25 }\n];\n\nconst sequences_A8B9C2D1 = [];\nlet accumulatedFrames_A8B9C2D1 = 0;\n\nscript_A8B9C2D1.forEach((segment, index) => {\n  sequences_A8B9C2D1.push({\n    ...segment,\n    start: accumulatedFrames_A8B9C2D1,\n    end: accumulatedFrames_A8B9C2D1 + segment.frames\n  });\n  accumulatedFrames_A8B9C2D1 += segment.frames;\n});\n\nconst totalFrames_A8B9C2D1 = script_A8B9C2D1.reduce((sum, s) => sum + s.frames, 0);\nexport const durationInFrames_A8B9C2D1 = totalFrames_A8B9C2D1;\n\nexport default function TemplateScene() {\n  const frame = useCurrentFrame();\n  const { fps } = useVideoConfig();\n\n  // Profile image scaling animation (80% to 100%)\n  const profileScale = interpolate(\n    frame,\n    [0, 15],\n    [0.8, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\", easing: (t) => t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t }\n  );\n\n  // Total Revenue card sliding up from bottom - ease in ease out\n  const revenueY = interpolate(\n    frame,\n    [0, 15],\n    [200, 0],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\", easing: (t) => t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t }\n  );\n\n  // Data Customer Profile sliding down from top - ease in ease out\n  const dataY = interpolate(\n    frame,\n    [0, 15],\n    [-150, 0],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\", easing: (t) => t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t }\n  );\n\n  // Bar chart animation - bars growing and changing\n  const bar1Height = interpolate(\n    frame,\n    [10, 20],\n    [60, 80],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const bar2Height = interpolate(\n    frame,\n    [12, 22],\n    [90, 70],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const bar3Height = interpolate(\n    frame,\n    [14, 24],\n    [100, 120],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const bar4Height = interpolate(\n    frame,\n    [16, 25],\n    [70, 85],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const bar5Height = interpolate(\n    frame,\n    [18, 25],\n    [50, 60],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  // Percentage values changing\n  const percentage1 = Math.round(interpolate(\n    frame,\n    [10, 20],\n    [57, 62],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  ));\n\n  const percentage2 = Math.round(interpolate(\n    frame,\n    [12, 22],\n    [69, 65],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  ));\n\n  const percentage3 = Math.round(interpolate(\n    frame,\n    [14, 24],\n    [79, 84],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  ));\n\n  return (\n    <AbsoluteFill style={{ backgroundColor: \"#F4E76E\" }}>\n      \n      {/* Data Customer Profile Card - Behind, sliding down, moved more to the left */}\n      <div\n        style={{\n          position: \"absolute\",\n          top: \"40%\",\n          right: \"20%\",\n          transform: `translate(0, calc(-50% + ${dataY}px))`,\n          backgroundColor: \"#2A2A2A\",\n          borderRadius: \"24px\",\n          padding: \"32px\",\n          width: \"400px\",\n          height: \"320px\",\n          zIndex: 1\n        }}\n      >\n        <div style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"24px\" }}>\n          <div\n            style={{\n              width: \"32px\",\n              height: \"32px\",\n              backgroundColor: \"white\",\n              borderRadius: \"8px\",\n              marginRight: \"16px\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            }}\n          >\n            <window.IconifyIcon icon=\"mdi:star-four-points\" style={{ fontSize: \"20px\", color: \"#2A2A2A\" }} />\n          </div>\n          <div>\n            <div style={{ color: \"white\", fontSize: \"24px\", fontWeight: \"700\", fontFamily: \"Inter\" }}>DATA</div>\n            <div style={{ color: \"#888\", fontSize: \"18px\", fontFamily: \"Inter\" }}>Customer Profile</div>\n          </div>\n        </div>\n\n        {/* Bar Chart */}\n        <div style={{ display: \"flex\", alignItems: \"end\", justifyContent: \"space-between\", height: \"160px\", marginBottom: \"16px\" }}>\n          <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n            <div style={{ color: \"#888\", fontSize: \"14px\", marginBottom: \"8px\", fontFamily: \"Inter\" }}>{percentage1}%</div>\n            <div\n              style={{\n                width: \"40px\",\n                height: `${bar1Height}px`,\n                backgroundColor: \"#F4E76E\",\n                borderRadius: \"4px\"\n              }}\n            />\n            <div style={{ color: \"#888\", fontSize: \"12px\", marginTop: \"8px\", fontFamily: \"Inter\" }}>I-32</div>\n          </div>\n          \n          <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n            <div style={{ color: \"#888\", fontSize: \"14px\", marginBottom: \"8px\", fontFamily: \"Inter\" }}>{percentage2}%</div>\n            <div\n              style={{\n                width: \"40px\",\n                height: `${bar2Height}px`,\n                backgroundColor: \"white\",\n                borderRadius: \"4px\"\n              }}\n            />\n            <div style={{ color: \"#888\", fontSize: \"12px\", marginTop: \"8px\", fontFamily: \"Inter\" }}>USA</div>\n          </div>\n\n          <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n            <div style={{ color: \"#888\", fontSize: \"14px\", marginBottom: \"8px\", fontFamily: \"Inter\" }}>{percentage3}%</div>\n            <div\n              style={{\n                width: \"40px\",\n                height: `${bar3Height}px`,\n                backgroundColor: \"#F4E76E\",\n                borderRadius: \"4px\"\n              }}\n            />\n            <div style={{ color: \"#888\", fontSize: \"12px\", marginTop: \"8px\", fontFamily: \"Inter\" }}>W</div>\n          </div>\n\n          <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n            <div style={{ color: \"#888\", fontSize: \"14px\", marginBottom: \"8px\", fontFamily: \"Inter\" }}>51%</div>\n            <div\n              style={{\n                width: \"40px\",\n                height: `${bar4Height}px`,\n                backgroundColor: \"white\",\n                borderRadius: \"4px\"\n              }}\n            />\n            <div style={{ color: \"#888\", fontSize: \"12px\", marginTop: \"8px\", fontFamily: \"Inter\" }}>M</div>\n          </div>\n\n          <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n            <div style={{ color: \"#888\", fontSize: \"14px\", marginBottom: \"8px\", fontFamily: \"Inter\" }}>41%</div>\n            <div\n              style={{\n                width: \"40px\",\n                height: `${bar5Height}px`,\n                backgroundColor: \"white\",\n                borderRadius: \"4px\"\n              }}\n            />\n            <div style={{ color: \"#888\", fontSize: \"12px\", marginTop: \"8px\", fontFamily: \"Inter\" }}>F</div>\n          </div>\n        </div>\n\n        <div\n          style={{\n            position: \"absolute\",\n            bottom: \"20px\",\n            right: \"20px\",\n            width: \"32px\",\n            height: \"32px\",\n            border: \"2px solid #666\",\n            borderRadius: \"50%\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          }}\n        >\n          <window.IconifyIcon icon=\"mdi:plus\" style={{ fontSize: \"16px\", color: \"#666\" }} />\n        </div>\n      </div>\n\n      {/* Total Revenue Card - Sliding up from bottom, moved further right */}\n      <div\n        style={{\n          position: \"absolute\",\n          top: \"55%\",\n          left: \"20%\",\n          transform: `translate(0, calc(-50% + ${revenueY}px))`,\n          backgroundColor: \"#2A2A2A\",\n          borderRadius: \"24px\",\n          padding: \"40px\",\n          width: \"380px\",\n          height: \"200px\",\n          zIndex: 2\n        }}\n      >\n        <div style={{ color: \"white\", fontSize: \"24px\", fontWeight: \"400\", marginBottom: \"16px\", fontFamily: \"Inter\" }}>\n          Total Revenue\n        </div>\n        <div style={{ color: \"#F4E76E\", fontSize: \"72px\", fontWeight: \"700\", fontFamily: \"Inter\" }}>\n          $125K\n        </div>\n      </div>\n\n      {/* Profile Avatar - Black man avatar, moved down and more to the right */}\n      <div\n        style={{\n          position: \"absolute\",\n          top: \"40%\",\n          left: \"30%\",\n          transform: `translate(-50%, -50%) scale(${profileScale})`,\n          zIndex: 3\n        }}\n      >\n        <div\n          style={{\n            width: \"200px\",\n            height: \"200px\",\n            borderRadius: \"50%\",\n            background: \"linear-gradient(45deg, #FF6B6B, #4ECDC4, #45B7D1, #96CEB4)\",\n            padding: \"6px\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          }}\n        >\n          <Img\n            src={window.BazaarAvatars['black-man']}\n            style={{\n              width: \"180px\",\n              height: \"180px\",\n              borderRadius: \"50%\",\n              objectFit: \"cover\"\n            }}\n          />\n        </div>\n      </div>\n\n    </AbsoluteFill>\n  );\n}"}],"meta":{"templateId":"animated-ui-portrait","dbId":"c999b0df-b6e4-4bb4-8387-7a88475fcb2f","duration":60,"supportedFormats":["portrait"],"promptVariant":"phrase-2"}}
{"messages":[{"role":"system","content":"You are Bazaar's Remotion code generator. Respond with valid TSX only. Start with imports/const declarations and never add prose."},{"role":"user","content":"Need a landscape (1920×1080) Remotion scene for storytelling hero copy that swaps verbs via typewriter animation. Long-form typewriter headline that cycles through verbs for 'We were born to …'. This should work well for website hero, pitch deck intro, and mission statement. Include headline text and cursor. Animate with typewriter, cursor blink, and loop. Keep the style bold, storytelling, and minimal. Palette should lean on monochrome. Keep it around 9 seconds (270 frames)."},{"role":"assistant","content":"const { AbsoluteFill, interpolate, useCurrentFrame } = window.Remotion;\n\nexport default function WordFlip() {\n  const Typewriter = () => {\n    const frame = useCurrentFrame();\n    const staticText = \"We were born to\";\n    const words = [\"build\", \"ship\", \"create\"];\n    const currentIndex = Math.floor(frame / 90) % words.length;\n    const currentWord = words[currentIndex] || '';\n    const cycleFrame = frame % 90;\n\n    let displayText = \"\";\n    if (cycleFrame < 30) {\n      const progress = interpolate(cycleFrame, [0, 25], [0, 1], { extrapolateRight: \"clamp\" });\n      displayText = currentWord.slice(0, Math.floor(currentWord.length * progress));\n    } else if (cycleFrame < 60) {\n      displayText = currentWord;\n    } else {\n      const progress = interpolate(cycleFrame, [60, 85], [1, 0], { extrapolateRight: \"clamp\" });\n      displayText = currentWord.slice(0, Math.floor(currentWord.length * progress));\n    }\n\n    const cursorVisible = Math.floor((frame % 45) / 30);\n\n    return (\n      <div\n        style={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          fontSize: '80px',\n          fontFamily: 'Inter, sans-serif',\n          fontWeight: 700,\n          color: '#1A1A1A',\n          display: 'flex',\n          alignItems: 'center',\n          gap: '16px',\n          whiteSpace: 'nowrap',\n        }}\n      >\n        {staticText}\n        <span style={{ minWidth: '400px', display: 'inline-block' }}>\n          {displayText}\n          <span style={{ opacity: cursorVisible, color: '#1A1A1A', marginLeft: '2px' }}>|</span>\n        </span>\n      </div>\n    );\n  };\n\n  return (\n    <AbsoluteFill style={{ background: 'white' }}>\n      <Typewriter />\n    </AbsoluteFill>\n  );\n};"}],"meta":{"templateId":"word-replace-db","dbId":"157c4c8a-9961-4a04-90a6-a3107bb5787d","duration":270,"supportedFormats":["landscape"],"promptVariant":"base"}}
