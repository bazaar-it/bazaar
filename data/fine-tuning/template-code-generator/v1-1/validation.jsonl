{"messages":[{"role":"system","content":"You are Bazaar's Remotion code generator. Respond with valid TSX only. Start with imports/const declarations and never add prose."},{"role":"user","content":"Corporate card animation"},{"role":"assistant","content":"const { AbsoluteFill, Sequence, spring, interpolate, useCurrentFrame, useVideoConfig, Img } = window.Remotion;\n\nconst script_a8f3d2e1 = [\n  { type: \"card-entrance\", frames: 30 },\n  { type: \"feature-1\", frames: 18 },\n  { type: \"feature-2\", frames: 18 },\n  { type: \"feature-3\", frames: 18 },\n  { type: \"feature-4\", frames: 18 },\n  { type: \"feature-5\", frames: 18 },\n  { type: \"feature-6\", frames: 18 },\n  { type: \"feature-7\", frames: 18 },\n  { type: \"feature-8\", frames: 18 },\n  { type: \"hold\", frames: 15 }\n];\n\nconst sequences_a8f3d2e1 = [];\nlet accumulatedFrames_a8f3d2e1 = 0;\n\nscript_a8f3d2e1.forEach((segment, index) => {\n  sequences_a8f3d2e1.push({\n    ...segment,\n    start: accumulatedFrames_a8f3d2e1,\n    end: accumulatedFrames_a8f3d2e1 + segment.frames\n  });\n  accumulatedFrames_a8f3d2e1 += segment.frames;\n});\n\nconst totalFrames_a8f3d2e1 = script_a8f3d2e1.reduce((sum, s) => sum + s.frames, 0);\nexport const durationInFrames_a8f3d2e1 = totalFrames_a8f3d2e1;\n\nexport default function TemplateScene_d86c_49b3_9559_227311651f22() {\n  const frame = useCurrentFrame();\n  const { fps } = useVideoConfig();\n\n  const cardScale = spring({\n    frame: frame - sequences_a8f3d2e1[0].start,\n    fps,\n    config: { damping: 15, stiffness: 120 },\n    durationInFrames: 20\n  });\n\n  const cardOpacity = interpolate(\n    frame - sequences_a8f3d2e1[0].start,\n    [0, 15],\n    [0, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  // Animated diagonal overlay\n  const diagonalAnimation = interpolate(\n    frame - sequences_a8f3d2e1[0].start,\n    [0, 40],\n    [0, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const feature1Slide = spring({\n    frame: frame - sequences_a8f3d2e1[1].start,\n    fps,\n    config: { damping: 12, stiffness: 100 },\n    durationInFrames: 18\n  });\n\n  const feature1Opacity = interpolate(\n    frame - sequences_a8f3d2e1[1].start,\n    [0, 12],\n    [0, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const feature2Scale = spring({\n    frame: frame - sequences_a8f3d2e1[2].start,\n    fps,\n    config: { damping: 10, stiffness: 140 },\n    durationInFrames: 16\n  });\n\n  const feature2Opacity = interpolate(\n    frame - sequences_a8f3d2e1[2].start,\n    [0, 10],\n    [0, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const feature3Slide = spring({\n    frame: frame - sequences_a8f3d2e1[3].start,\n    fps,\n    config: { damping: 14, stiffness: 110 },\n    durationInFrames: 18\n  });\n\n  const feature3Opacity = interpolate(\n    frame - sequences_a8f3d2e1[3].start,\n    [0, 12],\n    [0, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const feature4Scale = spring({\n    frame: frame - sequences_a8f3d2e1[4].start,\n    fps,\n    config: { damping: 12, stiffness: 100 },\n    durationInFrames: 18\n  });\n\n  const feature4Opacity = interpolate(\n    frame - sequences_a8f3d2e1[4].start,\n    [0, 12],\n    [0, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const feature5Slide = spring({\n    frame: frame - sequences_a8f3d2e1[5].start,\n    fps,\n    config: { damping: 10, stiffness: 140 },\n    durationInFrames: 16\n  });\n\n  const feature5Opacity = interpolate(\n    frame - sequences_a8f3d2e1[5].start,\n    [0, 10],\n    [0, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const feature6Scale = spring({\n    frame: frame - sequences_a8f3d2e1[6].start,\n    fps,\n    config: { damping: 14, stiffness: 110 },\n    durationInFrames: 18\n  });\n\n  const feature6Opacity = interpolate(\n    frame - sequences_a8f3d2e1[6].start,\n    [0, 12],\n    [0, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const feature7Slide = spring({\n    frame: frame - sequences_a8f3d2e1[7].start,\n    fps,\n    config: { damping: 12, stiffness: 100 },\n    durationInFrames: 18\n  });\n\n  const feature7Opacity = interpolate(\n    frame - sequences_a8f3d2e1[7].start,\n    [0, 12],\n    [0, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const feature8Scale = spring({\n    frame: frame - sequences_a8f3d2e1[8].start,\n    fps,\n    config: { damping: 10, stiffness: 140 },\n    durationInFrames: 16\n  });\n\n  const feature8Opacity = interpolate(\n    frame - sequences_a8f3d2e1[8].start,\n    [0, 10],\n    [0, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  return (\n    <AbsoluteFill style={{ backgroundColor: \"#f8f9fa\" }}>\n      {/* Main Ramp Credit Card */}\n      {frame >= sequences_a8f3d2e1[0].start && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: `translate(-50%, -50%) scale(${cardScale})`,\n            opacity: cardOpacity,\n            width: \"600px\",\n            height: \"380px\",\n            borderRadius: \"24px\",\n            background: \"linear-gradient(135deg, #2d3748 0%, #1a202c 100%)\",\n            boxShadow: \"0 20px 40px rgba(0,0,0,0.3)\",\n            overflow: \"hidden\",\n            position: \"relative\"\n          }}\n        >\n          {/* Animated diagonal pattern overlay */}\n          <div\n            style={{\n              position: \"absolute\",\n              top: \"0\",\n              left: \"0\",\n              right: \"0\",\n              bottom: \"0\",\n              background: \"repeating-linear-gradient(45deg, transparent, transparent 8px, rgba(255,255,255,0.03) 8px, rgba(255,255,255,0.03) 16px)\",\n              opacity: diagonalAnimation,\n              transform: `translateX(${interpolate(diagonalAnimation, [0, 1], [-100, 0])}px)`,\n              pointerEvents: \"none\"\n            }}\n          />\n          \n          {/* Ramp logo */}\n          <Img\n            src=\"https://cdn.brandfetch.io/idWQ_FWEk6/w/800/h/213/idB_fuD3sk.png?c=1bxid64Mup7aczewSAYMX&t=1661145054279\"\n            style={{\n              position: \"absolute\",\n              top: \"40px\",\n              left: \"40px\",\n              height: \"42px\",\n              width: \"auto\",\n              objectFit: \"contain\"\n            }}\n          />\n          \n          {/* Visa logo */}\n          <Img\n            src=\"https://upload.wikimedia.org/wikipedia/commons/5/5e/Visa_Inc._logo.svg\"\n            style={{\n              position: \"absolute\",\n              top: \"40px\",\n              right: \"40px\",\n              height: \"32px\",\n              width: \"auto\",\n              objectFit: \"contain\",\n              filter: \"brightness(0) invert(1)\" // Make it white\n            }}\n          />\n          \n          {/* Credit Card Chip - positioned on bottom right */}\n          <div\n            style={{\n              position: \"absolute\",\n              bottom: \"60px\",\n              right: \"60px\",\n              width: \"50px\",\n              height: \"40px\",\n              background: \"linear-gradient(135deg, #f7fafc 0%, #e2e8f0 50%, #cbd5e0 100%)\",\n              borderRadius: \"6px\",\n              border: \"2px solid #a0aec0\",\n              boxShadow: \"inset 0 2px 4px rgba(0,0,0,0.1), 0 1px 2px rgba(0,0,0,0.2)\",\n              position: \"relative\"\n            }}\n          >\n            {/* Chip contact lines - horizontal */}\n            <div\n              style={{\n                position: \"absolute\",\n                top: \"8px\",\n                left: \"8px\",\n                right: \"8px\",\n                bottom: \"8px\",\n                background: \"repeating-linear-gradient(0deg, #a0aec0 0px, #a0aec0 1px, transparent 1px, transparent 3px)\",\n                borderRadius: \"2px\"\n              }}\n            />\n            {/* Chip contact lines - vertical */}\n            <div\n              style={{\n                position: \"absolute\",\n                top: \"8px\",\n                left: \"8px\",\n                right: \"8px\",\n                bottom: \"8px\",\n                background: \"repeating-linear-gradient(90deg, #a0aec0 0px, #a0aec0 1px, transparent 1px, transparent 3px)\",\n                borderRadius: \"2px\"\n              }}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* Feature 1: Uber with green tick */}\n      {frame >= sequences_a8f3d2e1[1].start && frame < sequences_a8f3d2e1[9].end && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"25%\",\n            left: \"15%\",\n            transform: `translateX(${interpolate(feature1Slide, [0, 1], [-100, 0], { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" })}px)`,\n            opacity: feature1Opacity,\n            background: \"#ffffff\",\n            padding: \"28px 40px\",\n            borderRadius: \"20px\",\n            boxShadow: \"0 12px 32px rgba(0,0,0,0.2)\",\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: \"20px\",\n            zIndex: 10\n          }}\n        >\n          <div\n            style={{\n              width: \"48px\",\n              height: \"48px\",\n              borderRadius: \"50%\",\n              background: \"#10b981\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            }}\n          >\n            <window.IconifyIcon icon=\"mdi:check\" style={{ fontSize: \"32px\", color: \"#ffffff\" }} />\n          </div>\n          <span\n            style={{\n              fontFamily: \"Inter\",\n              fontWeight: \"600\",\n              fontSize: \"28px\",\n              color: \"#2d3748\"\n            }}\n          >\n            Uber\n          </span>\n        </div>\n      )}\n\n      {/* Feature 2: Meals with red X */}\n      {frame >= sequences_a8f3d2e1[2].start && frame < sequences_a8f3d2e1[9].end && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"40%\",\n            left: \"10%\",\n            transform: `scale(${feature2Scale})`,\n            opacity: feature2Opacity,\n            background: \"#ffffff\",\n            padding: \"28px 40px\",\n            borderRadius: \"20px\",\n            boxShadow: \"0 12px 32px rgba(0,0,0,0.2)\",\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: \"20px\",\n            zIndex: 10\n          }}\n        >\n          <div\n            style={{\n              width: \"48px\",\n              height: \"48px\",\n              borderRadius: \"50%\",\n              background: \"#ef4444\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            }}\n          >\n            <window.IconifyIcon icon=\"mdi:close\" style={{ fontSize: \"32px\", color: \"#ffffff\" }} />\n          </div>\n          <span\n            style={{\n              fontFamily: \"Inter\",\n              fontWeight: \"600\",\n              fontSize: \"28px\",\n              color: \"#2d3748\"\n            }}\n          >\n            Meals\n          </span>\n        </div>\n      )}\n\n      {/* Feature 3: SAAS Subscription with green tick */}\n      {frame >= sequences_a8f3d2e1[3].start && frame < sequences_a8f3d2e1[9].end && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"65%\",\n            left: \"20%\",\n            transform: `translateY(${interpolate(feature3Slide, [0, 1], [100, 0], { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" })}px)`,\n            opacity: feature3Opacity,\n            background: \"#ffffff\",\n            padding: \"28px 40px\",\n            borderRadius: \"20px\",\n            boxShadow: \"0 12px 32px rgba(0,0,0,0.2)\",\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: \"20px\",\n            zIndex: 10\n          }}\n        >\n          <div\n            style={{\n              width: \"48px\",\n              height: \"48px\",\n              borderRadius: \"50%\",\n              background: \"#10b981\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            }}\n          >\n            <window.IconifyIcon icon=\"mdi:check\" style={{ fontSize: \"32px\", color: \"#ffffff\" }} />\n          </div>\n          <span\n            style={{\n              fontFamily: \"Inter\",\n              fontWeight: \"600\",\n              fontSize: \"28px\",\n              color: \"#2d3748\"\n            }}\n          >\n            SAAS Subscription\n          </span>\n        </div>\n      )}\n\n      {/* Feature 4: Office supplies with red X */}\n      {frame >= sequences_a8f3d2e1[4].start && frame < sequences_a8f3d2e1[9].end && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"80%\",\n            left: \"15%\",\n            transform: `scale(${feature4Scale})`,\n            opacity: feature4Opacity,\n            background: \"#ffffff\",\n            padding: \"28px 40px\",\n            borderRadius: \"20px\",\n            boxShadow: \"0 12px 32px rgba(0,0,0,0.2)\",\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: \"20px\",\n            zIndex: 10\n          }}\n        >\n          <div\n            style={{\n              width: \"48px\",\n              height: \"48px\",\n              borderRadius: \"50%\",\n              background: \"#ef4444\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            }}\n          >\n            <window.IconifyIcon icon=\"mdi:close\" style={{ fontSize: \"32px\", color: \"#ffffff\" }} />\n          </div>\n          <span\n            style={{\n              fontFamily: \"Inter\",\n              fontWeight: \"600\",\n              fontSize: \"28px\",\n              color: \"#2d3748\"\n            }}\n          >\n            Office supplies\n          </span>\n        </div>\n      )}\n\n      {/* Feature 5: Parking with red X */}\n      {frame >= sequences_a8f3d2e1[5].start && frame < sequences_a8f3d2e1[9].end && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"30%\",\n            right: \"15%\",\n            transform: `translateX(${interpolate(feature5Slide, [0, 1], [100, 0], { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" })}px)`,\n            opacity: feature5Opacity,\n            background: \"#ffffff\",\n            padding: \"28px 40px\",\n            borderRadius: \"20px\",\n            boxShadow: \"0 12px 32px rgba(0,0,0,0.2)\",\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: \"20px\",\n            zIndex: 10\n          }}\n        >\n          <div\n            style={{\n              width: \"48px\",\n              height: \"48px\",\n              borderRadius: \"50%\",\n              background: \"#ef4444\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            }}\n          >\n            <window.IconifyIcon icon=\"mdi:close\" style={{ fontSize: \"32px\", color: \"#ffffff\" }} />\n          </div>\n          <span\n            style={{\n              fontFamily: \"Inter\",\n              fontWeight: \"600\",\n              fontSize: \"28px\",\n              color: \"#2d3748\"\n            }}\n          >\n            Parking\n          </span>\n        </div>\n      )}\n\n      {/* Feature 6: Alcohol with green tick */}\n      {frame >= sequences_a8f3d2e1[6].start && frame < sequences_a8f3d2e1[9].end && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"50%\",\n            right: \"10%\",\n            transform: `scale(${feature6Scale})`,\n            opacity: feature6Opacity,\n            background: \"#ffffff\",\n            padding: \"28px 40px\",\n            borderRadius: \"20px\",\n            boxShadow: \"0 12px 32px rgba(0,0,0,0.2)\",\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: \"20px\",\n            zIndex: 10\n          }}\n        >\n          <div\n            style={{\n              width: \"48px\",\n              height: \"48px\",\n              borderRadius: \"50%\",\n              background: \"#10b981\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            }}\n          >\n            <window.IconifyIcon icon=\"mdi:check\" style={{ fontSize: \"32px\", color: \"#ffffff\" }} />\n          </div>\n          <span\n            style={{\n              fontFamily: \"Inter\",\n              fontWeight: \"600\",\n              fontSize: \"28px\",\n              color: \"#2d3748\"\n            }}\n          >\n            Alcohol\n          </span>\n        </div>\n      )}\n\n      {/* Feature 7: Pet supplies with green tick */}\n      {frame >= sequences_a8f3d2e1[7].start && frame < sequences_a8f3d2e1[9].end && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"70%\",\n            right: \"20%\",\n            transform: `translateY(${interpolate(feature7Slide, [0, 1], [100, 0], { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" })}px)`,\n            opacity: feature7Opacity,\n            background: \"#ffffff\",\n            padding: \"28px 40px\",\n            borderRadius: \"20px\",\n            boxShadow: \"0 12px 32px rgba(0,0,0,0.2)\",\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: \"20px\",\n            zIndex: 10\n          }}\n        >\n          <div\n            style={{\n              width: \"48px\",\n              height: \"48px\",\n              borderRadius: \"50%\",\n              background: \"#10b981\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            }}\n          >\n            <window.IconifyIcon icon=\"mdi:check\" style={{ fontSize: \"32px\", color: \"#ffffff\" }} />\n          </div>\n          <span\n            style={{\n              fontFamily: \"Inter\",\n              fontWeight: \"600\",\n              fontSize: \"28px\",\n              color: \"#2d3748\"\n            }}\n          >\n            Pet supplies\n          </span>\n        </div>\n      )}\n\n      {/* Feature 8: Charitable donations with red X */}\n      {frame >= sequences_a8f3d2e1[8].start && frame < sequences_a8f3d2e1[9].end && (\n        <div\n          style={{\n            position: \"absolute\",\n            bottom: \"10%\",\n            right: \"25%\",\n            transform: `scale(${feature8Scale})`,\n            opacity: feature8Opacity,\n            background: \"#ffffff\",\n            padding: \"28px 40px\",\n            borderRadius: \"20px\",\n            boxShadow: \"0 12px 32px rgba(0,0,0,0.2)\",\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: \"20px\",\n            zIndex: 10\n          }}\n        >\n          <div\n            style={{\n              width: \"48px\",\n              height: \"48px\",\n              borderRadius: \"50%\",\n              background: \"#ef4444\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            }}\n          >\n            <window.IconifyIcon icon=\"mdi:close\" style={{ fontSize: \"32px\", color: \"#ffffff\" }} />\n          </div>\n          <span\n            style={{\n              fontFamily: \"Inter\",\n              fontWeight: \"600\",\n              fontSize: \"28px\",\n              color: \"#2d3748\"\n            }}\n          >\n            Charitable donations\n          </span>\n        </div>\n      )}\n    </AbsoluteFill>\n  );\n}"}],"meta":{"templateId":"corporate-credit-card","dbId":"f83feab4-9ef2-425d-8c63-ed0d38c150b0","duration":189,"supportedFormats":["landscape"],"promptVariant":"curated-1"}}
{"messages":[{"role":"system","content":"You are Bazaar's Remotion code generator. Respond with valid TSX only. Start with imports/const declarations and never add prose."},{"role":"user","content":"Blur to focus text"},{"role":"assistant","content":"const { AbsoluteFill, useCurrentFrame, interpolate } = window.Remotion;\n\nconst script_mf16d81c = [\n  { text: \"Blur\", frames: 30 }\n];\n\nconst sequences_mf16d81c = [];\nlet accumulatedFrames_mf16d81c = 0;\n\nscript_mf16d81c.forEach((item, index) => {\n  sequences_mf16d81c.push({\n    start: accumulatedFrames_mf16d81c,\n    duration: item.frames,\n    text: item.text\n  });\n  accumulatedFrames_mf16d81c += item.frames;\n});\n\nconst totalFrames_mf16d81c = script_mf16d81c.reduce((sum, s) => sum + s.frames, 0);\nexport const durationInFrames_mf16d81c = totalFrames_mf16d81c;\n\nexport default function TemplateScene() {\n  const frame = useCurrentFrame();\n  \n  const blurAmount = interpolate(\n    frame,\n    [0, 20],\n    [20, 0],\n    {\n      extrapolateLeft: \"clamp\",\n      extrapolateRight: \"clamp\"\n    }\n  );\n  \n  return (\n    <AbsoluteFill\n      style={{\n        backgroundColor: \"white\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        display: \"flex\"\n      }}\n    >\n      <div\n        style={{\n          fontSize: \"120px\",\n          fontFamily: \"Inter\",\n          fontWeight: \"700\",\n          color: \"black\",\n          filter: `blur(${blurAmount}px)`,\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\"\n        }}\n      >\n        Blur\n      </div>\n    </AbsoluteFill>\n  );\n}"}],"meta":{"templateId":"blur-db","dbId":"4fefddd4-f509-423a-953c-fc066d25d009","duration":30,"supportedFormats":["landscape","portrait","square"],"promptVariant":"curated-1"}}
{"messages":[{"role":"system","content":"You are Bazaar's Remotion code generator. Respond with valid TSX only. Start with imports/const declarations and never add prose."},{"role":"user","content":"Analytics card animation"},{"role":"assistant","content":"const { AbsoluteFill, Sequence, interpolate, useCurrentFrame, useVideoConfig, Img } = window.Remotion;\n\nconst script_A8B9C2D1 = [\n  { type: \"simultaneous_animation\", frames: 25 }\n];\n\nconst sequences_A8B9C2D1 = [];\nlet accumulatedFrames_A8B9C2D1 = 0;\n\nscript_A8B9C2D1.forEach((segment, index) => {\n  sequences_A8B9C2D1.push({\n    ...segment,\n    start: accumulatedFrames_A8B9C2D1,\n    end: accumulatedFrames_A8B9C2D1 + segment.frames\n  });\n  accumulatedFrames_A8B9C2D1 += segment.frames;\n});\n\nconst totalFrames_A8B9C2D1 = script_A8B9C2D1.reduce((sum, s) => sum + s.frames, 0);\nexport const durationInFrames_A8B9C2D1 = totalFrames_A8B9C2D1;\n\nexport default function TemplateScene() {\n  const frame = useCurrentFrame();\n  const { fps } = useVideoConfig();\n\n  // Profile image scaling animation (80% to 100%)\n  const profileScale = interpolate(\n    frame,\n    [0, 15],\n    [0.8, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\", easing: (t) => t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t }\n  );\n\n  // Total Revenue card sliding up from bottom - ease in ease out\n  const revenueY = interpolate(\n    frame,\n    [0, 15],\n    [200, 0],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\", easing: (t) => t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t }\n  );\n\n  // Data Customer Profile sliding down from top - ease in ease out\n  const dataY = interpolate(\n    frame,\n    [0, 15],\n    [-150, 0],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\", easing: (t) => t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t }\n  );\n\n  // Bar chart animation - bars growing and changing\n  const bar1Height = interpolate(\n    frame,\n    [10, 20],\n    [60, 80],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const bar2Height = interpolate(\n    frame,\n    [12, 22],\n    [90, 70],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const bar3Height = interpolate(\n    frame,\n    [14, 24],\n    [100, 120],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const bar4Height = interpolate(\n    frame,\n    [16, 25],\n    [70, 85],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  const bar5Height = interpolate(\n    frame,\n    [18, 25],\n    [50, 60],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n\n  // Percentage values changing\n  const percentage1 = Math.round(interpolate(\n    frame,\n    [10, 20],\n    [57, 62],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  ));\n\n  const percentage2 = Math.round(interpolate(\n    frame,\n    [12, 22],\n    [69, 65],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  ));\n\n  const percentage3 = Math.round(interpolate(\n    frame,\n    [14, 24],\n    [79, 84],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  ));\n\n  return (\n    <AbsoluteFill style={{ backgroundColor: \"#F4E76E\" }}>\n      \n      {/* Data Customer Profile Card - Behind, sliding down, moved more to the left */}\n      <div\n        style={{\n          position: \"absolute\",\n          top: \"50%\",\n          right: \"30%\",\n          transform: `translate(0, calc(-50% + ${dataY}px))`,\n          backgroundColor: \"#2A2A2A\",\n          borderRadius: \"24px\",\n          padding: \"32px\",\n          width: \"400px\",\n          height: \"320px\",\n          zIndex: 1\n        }}\n      >\n        <div style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"24px\" }}>\n          <div\n            style={{\n              width: \"32px\",\n              height: \"32px\",\n              backgroundColor: \"white\",\n              borderRadius: \"8px\",\n              marginRight: \"16px\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            }}\n          >\n            <window.IconifyIcon icon=\"mdi:star-four-points\" style={{ fontSize: \"20px\", color: \"#2A2A2A\" }} />\n          </div>\n          <div>\n            <div style={{ color: \"white\", fontSize: \"24px\", fontWeight: \"700\", fontFamily: \"Inter\" }}>DATA</div>\n            <div style={{ color: \"#888\", fontSize: \"18px\", fontFamily: \"Inter\" }}>Customer Profile</div>\n          </div>\n        </div>\n\n        {/* Bar Chart */}\n        <div style={{ display: \"flex\", alignItems: \"end\", justifyContent: \"space-between\", height: \"140px\", marginBottom: \"16px\" }}>\n          <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n            <div style={{ color: \"#888\", fontSize: \"14px\", marginBottom: \"8px\", fontFamily: \"Inter\" }}>{percentage1}%</div>\n            <div\n              style={{\n                width: \"40px\",\n                height: `${bar1Height}px`,\n                backgroundColor: \"#F4E76E\",\n                borderRadius: \"4px\"\n              }}\n            />\n            <div style={{ color: \"#888\", fontSize: \"12px\", marginTop: \"8px\", fontFamily: \"Inter\" }}>I-32</div>\n          </div>\n          \n          <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n            <div style={{ color: \"#888\", fontSize: \"14px\", marginBottom: \"8px\", fontFamily: \"Inter\" }}>{percentage2}%</div>\n            <div\n              style={{\n                width: \"40px\",\n                height: `${bar2Height}px`,\n                backgroundColor: \"white\",\n                borderRadius: \"4px\"\n              }}\n            />\n            <div style={{ color: \"#888\", fontSize: \"12px\", marginTop: \"8px\", fontFamily: \"Inter\" }}>USA</div>\n          </div>\n\n          <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n            <div style={{ color: \"#888\", fontSize: \"14px\", marginBottom: \"8px\", fontFamily: \"Inter\" }}>{percentage3}%</div>\n            <div\n              style={{\n                width: \"40px\",\n                height: `${bar3Height}px`,\n                backgroundColor: \"#F4E76E\",\n                borderRadius: \"4px\"\n              }}\n            />\n            <div style={{ color: \"#888\", fontSize: \"12px\", marginTop: \"8px\", fontFamily: \"Inter\" }}>W</div>\n          </div>\n\n          <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n            <div style={{ color: \"#888\", fontSize: \"14px\", marginBottom: \"8px\", fontFamily: \"Inter\" }}>51%</div>\n            <div\n              style={{\n                width: \"40px\",\n                height: `${bar4Height}px`,\n                backgroundColor: \"white\",\n                borderRadius: \"4px\"\n              }}\n            />\n            <div style={{ color: \"#888\", fontSize: \"12px\", marginTop: \"8px\", fontFamily: \"Inter\" }}>M</div>\n          </div>\n\n          <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n            <div style={{ color: \"#888\", fontSize: \"14px\", marginBottom: \"8px\", fontFamily: \"Inter\" }}>41%</div>\n            <div\n              style={{\n                width: \"40px\",\n                height: `${bar5Height}px`,\n                backgroundColor: \"white\",\n                borderRadius: \"4px\"\n              }}\n            />\n            <div style={{ color: \"#888\", fontSize: \"12px\", marginTop: \"8px\", fontFamily: \"Inter\" }}>F</div>\n          </div>\n        </div>\n\n        <div\n          style={{\n            position: \"absolute\",\n            bottom: \"20px\",\n            right: \"20px\",\n            width: \"32px\",\n            height: \"32px\",\n            border: \"2px solid #666\",\n            borderRadius: \"50%\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          }}\n        >\n          <window.IconifyIcon icon=\"mdi:plus\" style={{ fontSize: \"16px\", color: \"#666\" }} />\n        </div>\n      </div>\n\n      {/* Total Revenue Card - Sliding up from bottom, moved further right */}\n      <div\n        style={{\n          position: \"absolute\",\n          top: \"65%\",\n          left: \"32%\",\n          transform: `translate(0, calc(-50% + ${revenueY}px))`,\n          backgroundColor: \"#2A2A2A\",\n          borderRadius: \"24px\",\n          padding: \"40px\",\n          width: \"380px\",\n          height: \"200px\",\n          zIndex: 2\n        }}\n      >\n        <div style={{ color: \"white\", fontSize: \"24px\", fontWeight: \"400\", marginBottom: \"16px\", fontFamily: \"Inter\" }}>\n          Total Revenue\n        </div>\n        <div style={{ color: \"#F4E76E\", fontSize: \"72px\", fontWeight: \"700\", fontFamily: \"Inter\" }}>\n          $125K\n        </div>\n      </div>\n\n      {/* Profile Avatar - Black man avatar, moved down and more to the right */}\n      <div\n        style={{\n          position: \"absolute\",\n          top: \"40%\",\n          left: \"40%\",\n          transform: `translate(-50%, -50%) scale(${profileScale})`,\n          zIndex: 3\n        }}\n      >\n        <div\n          style={{\n            width: \"200px\",\n            height: \"200px\",\n            borderRadius: \"50%\",\n            background: \"linear-gradient(45deg, #FF6B6B, #4ECDC4, #45B7D1, #96CEB4)\",\n            padding: \"6px\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          }}\n        >\n          <Img\n            src={window.BazaarAvatars['black-man']}\n            style={{\n              width: \"180px\",\n              height: \"180px\",\n              borderRadius: \"50%\",\n              objectFit: \"cover\"\n            }}\n          />\n        </div>\n      </div>\n\n    </AbsoluteFill>\n  );\n}"}],"meta":{"templateId":"ui-data-visualisation","dbId":"20880f1b-f72f-442b-a416-c368e9b640ff","duration":40,"supportedFormats":["landscape"],"promptVariant":"curated-1"}}
{"messages":[{"role":"system","content":"You are Bazaar's Remotion code generator. Respond with valid TSX only. Start with imports/const declarations and never add prose."},{"role":"user","content":"Circle animation"},{"role":"assistant","content":"const { AbsoluteFill, useCurrentFrame, useVideoConfig, interpolate, spring } = window.Remotion;\n\nexport default function HelloBubbles_me464oc0() {\n  const frame = useCurrentFrame();\n  const { fps, width, height } = useVideoConfig();\n\n  // Grid configuration - centered on canvas with extra columns and rows\n  const gridCols = 10;\n  const gridRows = 11; // Increased from 6 to 11 (added 2 top + 3 bottom)\n  const spacing = 200;\n  \n  // Focus circle (center of grid) - exactly at screen center\n  const focusCircle = { \n    x: width / 2, \n    y: height / 2\n  };\n  \n  // Calculate grid start position so focus circle is at screen center\n  const centerCol = Math.floor(gridCols / 2);\n  const centerRow = Math.floor(gridRows / 2);\n  const startX = focusCircle.x - (centerCol * spacing);\n  const startY = focusCircle.y - (centerRow * spacing);\n\n  // Updated color palette with different gradient combinations\n  const baseColors = [\n    { h1: 200, h2: 180, s1: 85, s2: 90, l1: 60, l2: 70 }, // Blue to cyan\n    { h1: 120, h2: 80, s1: 75, s2: 85, l1: 50, l2: 65 },  // Green to lime\n    { h1: 320, h2: 280, s1: 80, s2: 75, l1: 65, l2: 55 }, // Pink to purple\n    { h1: 25, h2: 0, s1: 90, s2: 85, l1: 60, l2: 50 },    // Orange to red\n    { h1: 180, h2: 220, s1: 70, s2: 80, l1: 55, l2: 60 }, // Teal to blue\n    { h1: 60, h2: 40, s1: 95, s2: 90, l1: 70, l2: 65 },   // Yellow to orange\n    { h1: 260, h2: 240, s1: 85, s2: 80, l1: 50, l2: 60 }, // Purple to blue\n    { h1: 350, h2: 330, s1: 90, s2: 85, l1: 65, l2: 70 }, // Red to pink\n  ];\n\n  // Generate animated gradients for each circle with color variations\n  const generateAnimatedGradient = (index) => {\n    // Select base color with some variation\n    const colorIndex = index % baseColors.length;\n    const baseColor = baseColors[colorIndex];\n    \n    // Add slight random variations to each circle\n    const hueVariation1 = (index * 3) % 15 - 7; // ±7 degrees\n    const hueVariation2 = (index * 5) % 12 - 6; // ±6 degrees\n    const satVariation1 = (index * 2) % 8 - 4; // ±4%\n    const satVariation2 = (index * 4) % 6 - 3; // ±3%\n    const lightVariation1 = (index * 1) % 6 - 3; // ±3%\n    const lightVariation2 = (index * 7) % 4 - 2; // ±2%\n    \n    // Animate hue with variations - twice as fast\n    const hue1 = interpolate(\n      frame,\n      [0, 45],\n      [baseColor.h1 + hueVariation1, baseColor.h1 + hueVariation1 + 10],\n      { extrapolateLeft: 'clamp', extrapolateRight: 'clamp' }\n    );\n    \n    const hue2 = interpolate(\n      frame,\n      [0, 45],\n      [baseColor.h2 + hueVariation2, baseColor.h2 + hueVariation2 + 8],\n      { extrapolateLeft: 'clamp', extrapolateRight: 'clamp' }\n    );\n    \n    // Animate saturation with variations - twice as fast\n    const sat1 = interpolate(\n      frame,\n      [0, 45],\n      [baseColor.s1 + satVariation1, baseColor.s1 + satVariation1 + 5],\n      { extrapolateLeft: 'clamp', extrapolateRight: 'clamp' }\n    );\n    \n    const sat2 = interpolate(\n      frame,\n      [0, 45],\n      [baseColor.s2 + satVariation2, baseColor.s2 + satVariation2 + 3],\n      { extrapolateLeft: 'clamp', extrapolateRight: 'clamp' }\n    );\n    \n    // Animate lightness with variations - twice as fast\n    const light1 = interpolate(\n      frame,\n      [0, 45],\n      [baseColor.l1 + lightVariation1, baseColor.l1 + lightVariation1 + 4],\n      { extrapolateLeft: 'clamp', extrapolateRight: 'clamp' }\n    );\n    \n    const light2 = interpolate(\n      frame,\n      [0, 45],\n      [baseColor.l2 + lightVariation2, baseColor.l2 + lightVariation2 + 3],\n      { extrapolateLeft: 'clamp', extrapolateRight: 'clamp' }\n    );\n    \n    // Animate gradient angle with slight variations - twice as fast\n    const angleVariation = (index * 11) % 20 - 10; // ±10 degrees\n    const angle = interpolate(\n      frame,\n      [0, 45],\n      [135 + angleVariation, 135 + angleVariation + 15],\n      { extrapolateLeft: 'clamp', extrapolateRight: 'clamp' }\n    );\n    \n    return `linear-gradient(${angle}deg, hsl(${hue1}, ${sat1}%, ${light1}%), hsl(${hue2}, ${sat2}%, ${light2}%), transparent)`;\n  };\n\n  // Generate circles in a perfect grid pattern\n  const circles = [];\n  for (let row = 0; row < gridRows; row++) {\n    for (let col = 0; col < gridCols; col++) {\n      // Skip the center position for the focus circle\n      if (row === Math.floor(gridRows / 2) && col === Math.floor(gridCols / 2)) {\n        continue;\n      }\n      \n      circles.push({\n        x: startX + col * spacing,\n        y: startY + row * spacing,\n        index: row * gridCols + col\n      });\n    }\n     }\n\n   // Generate animated gradient for focus circle - twice as fast\n  const focusGradient = (() => {\n    const hue1 = interpolate(\n      frame,\n      [0, 45],\n      [280, 310],\n      { extrapolateLeft: 'clamp', extrapolateRight: 'clamp' }\n    );\n    \n    const hue2 = interpolate(\n      frame,\n      [0, 45],\n      [25, 35],\n      { extrapolateLeft: 'clamp', extrapolateRight: 'clamp' }\n    );\n    \n    const angle = interpolate(\n      frame,\n      [0, 45],\n      [125, 145],\n      { extrapolateLeft: 'clamp', extrapolateRight: 'clamp' }\n    );\n    \n    return `linear-gradient(${angle}deg, hsl(${hue1}, 80%, 60%), hsl(${hue2}, 85%, 62%))`;\n  })();\n  \n  // Zoom animation - twice as fast, immediate after fade in\n  const zoomScale = interpolate(\n    frame,\n    [15, 30],\n    [1, 3],\n    {\n      extrapolateLeft: 'clamp',\n      extrapolateRight: 'clamp',\n      easing: (t) => 1 - Math.pow(1 - t, 3) // ease-out cubic\n    }\n  );\n\n  // Text opacity - starts fading in when zoom begins\n  const textOpacity = interpolate(\n    frame,\n    [15, 45],\n    [0, 1],\n    {\n      extrapolateLeft: 'clamp',\n      extrapolateRight: 'clamp'\n    }\n  );\n\n  return (\n    <AbsoluteFill style={{\n      background: 'linear-gradient(135deg, #F8F9FA, #E5E7EB)',\n      overflow: 'hidden'\n    }}>\n             <div style={{\n         transform: `scale(${zoomScale})`,\n         transformOrigin: `${width / 2}px ${height / 2}px`,\n        width: '100%',\n        height: '100%',\n        position: 'relative'\n      }}>\n        {circles.map((circle, index) => {\n          const scale = spring({\n            frame: frame,\n            fps,\n            config: {\n              damping: 15,\n              stiffness: 200,\n              mass: 1\n            }\n          });\n\n          const opacity = interpolate(\n            frame,\n            [0, 5],\n            [0, 1],\n            {\n              extrapolateLeft: 'clamp',\n              extrapolateRight: 'clamp'\n            }\n          );\n\n          return (\n            <div\n              key={index}\n              style={{\n                position: 'absolute',\n                left: `${circle.x}px`,\n                top: `${circle.y}px`,\n                width: '120px',\n                height: '120px',\n                borderRadius: '50%',\n                background: generateAnimatedGradient(circle.index),\n                transform: `translate(-50%, -50%) scale(${scale})`,\n                opacity: opacity,\n                filter: 'blur(0.5px)'\n              }}\n            />\n          );\n        })}\n        \n        <div\n          style={{\n            position: 'absolute',\n            left: `${focusCircle.x}px`,\n            top: `${focusCircle.y}px`,\n            width: '120px',\n            height: '120px',\n            borderRadius: '50%',\n            background: focusGradient,\n            transform: 'translate(-50%, -50%)',\n            opacity: interpolate(\n              frame,\n              [0, 5],\n              [0, 1],\n              {\n                extrapolateLeft: 'clamp',\n                extrapolateRight: 'clamp'\n              }\n            ),\n            filter: 'blur(0.5px)',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          }}\n        >\n          <span style={{\n            color: 'white',\n            fontSize: '24px',\n            fontWeight: '600',\n            fontFamily: 'Arial, sans-serif',\n            opacity: textOpacity,\n            textShadow: '0 2px 4px rgba(0,0,0,0.3)'\n          }}>\n            Hello\n          </span>\n        </div>\n      </div>\n    </AbsoluteFill>\n  );\n}\n\nexport const durationInFrames_me464oc0 = 90;"}],"meta":{"templateId":"hello-circles","dbId":"31bcdb78-9dfa-49ac-af34-1de889fc2e08","duration":90,"supportedFormats":["portrait"],"promptVariant":"curated-1"}}
{"messages":[{"role":"system","content":"You are Bazaar's Remotion code generator. Respond with valid TSX only. Start with imports/const declarations and never add prose."},{"role":"user","content":"Message notification animation"},{"role":"assistant","content":"const { AbsoluteFill, Sequence, spring, interpolate, useCurrentFrame, useVideoConfig, Img } = window.Remotion;\n\nconst script_A1B2C3D4 = [\n  { type: \"notification\", frames: 90 } // 3 seconds at 30fps\n];\n\nconst sequences_A1B2C3D4 = [];\nlet accumulatedFrames_A1B2C3D4 = 0;\n\nscript_A1B2C3D4.forEach((item, index) => {\n  sequences_A1B2C3D4.push({\n    ...item,\n    startFrame: accumulatedFrames_A1B2C3D4,\n    endFrame: accumulatedFrames_A1B2C3D4 + item.frames\n  });\n  accumulatedFrames_A1B2C3D4 += item.frames;\n});\n\nconst totalFrames_A1B2C3D4 = script_A1B2C3D4.reduce((sum, s) => sum + s.frames, 0);\nexport const durationInFrames_A1B2C3D4 = totalFrames_A1B2C3D4;\n\nexport default function TemplateScene() {\n  const frame = useCurrentFrame();\n  const { fps } = useVideoConfig();\n  \n  const msToFrames = (ms) => Math.round((ms / 1000) * fps);\n  \n  // Animation timing in frames\n  const bgStart = msToFrames(0);\n  const bgEnd = msToFrames(180);\n  const iconStart = msToFrames(40);\n  const iconEnd = msToFrames(340);\n  const senderStart = msToFrames(90);\n  const senderEnd = msToFrames(290);\n  const timestampStart = msToFrames(90);\n  const timestampEnd = msToFrames(290);\n  const previewStart = msToFrames(180);\n  const previewEnd = msToFrames(380);\n  const exitStart = msToFrames(2800);\n  const exitEnd = msToFrames(3000);\n  \n  // Background animation\n  const bgOpacity = interpolate(\n    frame,\n    [bgStart, bgEnd],\n    [0, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n  \n  const bgScale = interpolate(\n    frame,\n    [bgStart, bgEnd],\n    [0.96, 1.0],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n  \n  // Icon animation\n  const iconOpacity = interpolate(\n    frame,\n    [iconStart, iconEnd],\n    [0, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n  \n  const iconScale = spring({\n    frame: frame - iconStart,\n    fps,\n    config: { damping: 8, stiffness: 120 },\n    from: 0.6,\n    to: 1.0\n  });\n  \n  // Sender animation\n  const senderOpacity = interpolate(\n    frame,\n    [senderStart, senderEnd],\n    [0, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n  \n  const senderY = interpolate(\n    frame,\n    [senderStart, senderEnd],\n    [16, 0],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n  \n  // Timestamp animation\n  const timestampOpacity = interpolate(\n    frame,\n    [timestampStart, timestampEnd],\n    [0, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n  \n  const timestampScale = spring({\n    frame: frame - timestampStart,\n    fps,\n    config: { damping: 8, stiffness: 120 },\n    from: 0.6,\n    to: 1.0\n  });\n  \n  // Preview animation\n  const previewOpacity = interpolate(\n    frame,\n    [previewStart, previewEnd],\n    [0, 1],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n  \n  const previewY = interpolate(\n    frame,\n    [previewStart, previewEnd],\n    [20, 0],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  );\n  \n  // Exit animation\n  const exitOpacity = frame >= exitStart ? interpolate(\n    frame,\n    [exitStart, exitEnd],\n    [1, 0],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  ) : 1;\n  \n  const exitScale = frame >= exitStart ? interpolate(\n    frame,\n    [exitStart, exitEnd],\n    [1.0, 0.8],\n    { extrapolateLeft: \"clamp\", extrapolateRight: \"clamp\" }\n  ) : 1;\n  \n  return (\n    <AbsoluteFill style={{ backgroundColor: \"#FFFFFF\" }}>\n      <div\n        style={{\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: `translate(-50%, -50%) scale(${bgScale * exitScale})`,\n          width: \"1200px\",\n          height: \"240px\",\n          borderRadius: \"28px\",\n          background: \"rgba(240, 240, 242, 0.92)\",\n          backdropFilter: \"blur(20px)\",\n          padding: \"36px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          opacity: bgOpacity * exitOpacity,\n          boxShadow: \"0 20px 40px rgba(0, 0, 0, 0.15)\"\n        }}\n      >\n        {/* App Icon */}\n        <div\n          style={{\n            width: \"160px\",\n            height: \"160px\",\n            borderRadius: \"43px\",\n            background: \"linear-gradient(135deg, #34C759, #30D158)\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            opacity: iconOpacity * exitOpacity,\n            transform: `scale(${iconScale})`,\n            flexShrink: 0\n          }}\n        >\n          <window.IconifyIcon \n            icon=\"material-symbols:chat-bubble-rounded\" \n            style={{\n              fontSize: \"100px\",\n              color: \"#FFFFFF\"\n            }}\n          />\n        </div>\n        \n        {/* Content Area */}\n        <div\n          style={{\n            flex: 1,\n            marginLeft: \"36px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            paddingRight: \"24px\"\n          }}\n        >\n          {/* Sender */}\n          <div\n            style={{\n              fontFamily: \"Inter\",\n              fontWeight: \"700\",\n              fontSize: \"56px\",\n              color: \"#0B0B0F\",\n              opacity: senderOpacity * exitOpacity,\n              transform: `translateY(${senderY}px)`,\n              lineHeight: \"1.2\",\n              marginBottom: \"12px\"\n            }}\n          >\n            Bazaar Bot\n          </div>\n          \n          {/* Message Preview */}\n          <div\n            style={{\n              fontFamily: \"Inter\",\n              fontWeight: \"500\",\n              fontSize: \"56px\",\n              color: \"#0B0B0F\",\n              opacity: previewOpacity * exitOpacity,\n              transform: `translateY(${previewY}px)`,\n              lineHeight: \"1.2\"\n            }}\n          >\n            Yet another sick animation 💃\n          </div>\n        </div>\n        \n        {/* Timestamp */}\n        <div\n          style={{\n            fontFamily: \"Inter\",\n            fontWeight: \"600\",\n            fontSize: \"44px\",\n            color: \"#8E8E93\",\n            opacity: timestampOpacity * exitOpacity,\n            transform: `scale(${timestampScale})`,\n            alignSelf: \"flex-start\",\n            marginTop: \"8px\",\n            paddingLeft: \"12px\"\n          }}\n        >\n          now\n        </div>\n      </div>\n    </AbsoluteFill>\n  );\n}"}],"meta":{"templateId":"message-notification-db","dbId":"ed3ff0bf-6e54-4d98-b2c4-b923797071bc","duration":90,"supportedFormats":["landscape"],"promptVariant":"curated-1"}}
